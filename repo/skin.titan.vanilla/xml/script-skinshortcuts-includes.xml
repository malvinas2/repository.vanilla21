<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>$ADDON[script.skinshortcuts 32022]</label>
			<label2>$ADDON[script.skinshortcuts 32022]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/tvrecordings.png</icon>
			<thumb />
			<property name="labelID">livetv</property>
			<property name="defaultID">livetv</property>
			<property name="widget">tvrecordings</property>
			<property name="widgetName">$LOCALIZE[19017]</property>
			<property name="widgetType">pvr</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload)]$INFO[Window(home).Property(widgetreload2)]</property>
			<property name="widgetTarget">pvr</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_my tv.jpg</property>
			<property name="backgroundName">TV</property>
			<visible>System.HasPVRAddon</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">livetv</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>Mediathek</label>
			<label2>$LOCALIZE[70044]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/videoaddons.png</icon>
			<thumb />
			<property name="labelID">mediathek</property>
			<property name="defaultID">mediathek</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_OnlineVideos.jpg</property>
			<property name="backgroundName">Media</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(1108)</onclick>
			<property name="path">ActivateWindow(1108)</property>
			<property name="list">1108</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">mediathek</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>$LOCALIZE[342]</label>
			<label2>$ADDON[script.skinshortcuts 32015]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/movies.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<property name="widget">recommendedmovies</property>
			<property name="widgetName">$ADDON[script.skin.helper.widgets 32029]</property>
			<property name="widgetType">movies</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_moving pictures.jpg</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32039]</property>
			<property name="widget.1">recentmovies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</property>
			<property name="widgetName.1">$LOCALIZE[20386]</property>
			<property name="widget.99">randommovies</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">movies</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</property>
			<property name="widgetName.99">Spotlight</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">movies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>$LOCALIZE[20343]</label>
			<label2>$ADDON[script.skinshortcuts 32016]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/tvseries.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<property name="widget">nextepisodes</property>
			<property name="widgetName">$ADDON[script.skin.helper.widgets 32002]</property>
			<property name="widgetType">episodes</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload-episodes)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_my tv series.jpg</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32043]</property>
			<property name="widget.1">recentepisodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload-episodes)]</property>
			<property name="widgetName.1">$LOCALIZE[20387]</property>
			<property name="widget.99">randomtvshows</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">tvshows</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="widgetName.99">Spotlight</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>$LOCALIZE[10005]</label>
			<label2>$ADDON[script.skinshortcuts 32019]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/music.png</icon>
			<thumb />
			<property name="labelID">10005</property>
			<property name="defaultID">music</property>
			<property name="widget">recentalbums</property>
			<property name="widgetName">$LOCALIZE[359]</property>
			<property name="widgetType">albums</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]</property>
			<property name="widgetTarget">music</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/music.jpg</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32048]</property>
			<property name="widget.1">recentsongs</property>
			<property name="widgetTarget.1">music</property>
			<property name="widgetType.1">songs</property>
			<property name="widgetPath.1">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]</property>
			<property name="widgetName.1">$ADDON[script.skin.helper.widgets 32012]</property>
			<property name="widgetstyle">square</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Music,musicdb://,return)</onclick>
			<property name="path">ActivateWindow(Music,musicdb://,return)</property>
			<property name="list">musicdb://</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-10005</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>$LOCALIZE[20389]</label>
			<label2>$ADDON[script.skinshortcuts 32018]</label2>
			<icon>special://home/addons/resource.images.skinbackgrounds.titanium/resources/hover_my music.jpg</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<property name="widget">recentmusicvideos</property>
			<property name="widgetName">$LOCALIZE[20390]</property>
			<property name="widgetType">musicvideos</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload-musicvideos)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_my music.jpg</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32047]</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">musicvideos</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>$ADDON[script.skinshortcuts 32087]</label>
			<label2>$ADDON[script.skinshortcuts 32087]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/radio.png</icon>
			<thumb />
			<property name="labelID">radio</property>
			<property name="defaultID">radio</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_radiotime.jpg</property>
			<property name="backgroundName">19021</property>
			<visible>System.HasPVRAddon</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">radio</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>Search</label>
			<label2>$LOCALIZE[70045]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/programs.png</icon>
			<thumb />
			<property name="labelID">search</property>
			<property name="defaultID">search</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_mynumberplace.jpg</property>
			<property name="backgroundName">Search</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(1107)</onclick>
			<property name="path">ActivateWindow(1107)</property>
			<property name="list">1107</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">search</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>$LOCALIZE[12600]</label>
			<label2>$LOCALIZE[70046]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/weather.png</icon>
			<thumb />
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<property name="widget">weather</property>
			<property name="widgetName">$LOCALIZE[8]</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[WeatherWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/weather.jpg</property>
			<visible>!String.IsEmpty(Weather.Plugin)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">weather</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>$LOCALIZE[10002]</label>
			<label2>$ADDON[script.skinshortcuts 32020]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/pictures.png</icon>
			<thumb />
			<property name="labelID">pictures</property>
			<property name="defaultID">pictures</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_my pictures.jpg</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32046]</property>
			<visible>!Skin.HasSetting(HomeMenuUsePlexforPictures)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Pictures,return)</onclick>
			<property name="path">ActivateWindow(Pictures,return)</property>
			<property name="list">Pictures</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">pictures</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<label>$LOCALIZE[10006]</label>
			<label2>$ADDON[script.skinshortcuts 32014]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/livetv.png</icon>
			<thumb />
			<property name="labelID">10006</property>
			<property name="defaultID">videos</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_my videos.jpg</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32038]</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,return)</onclick>
			<property name="path">ActivateWindow(Videos,return)</property>
			<property name="list">Videos</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-10006</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<label>$LOCALIZE[15016]</label>
			<label2>$ADDON[script.skinshortcuts 32123]</label2>
			<icon>special://home/addons/resource.images.skinbackgrounds.titanium/resources/hover_tetris.jpg</icon>
			<thumb />
			<property name="labelID">15016</property>
			<property name="defaultID">games</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_tetris.jpg</property>
			<property name="backgroundName">Games</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Games,return)</onclick>
			<property name="path">ActivateWindow(Games,return)</property>
			<property name="list">Games</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-15016</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<label>$LOCALIZE[10001]</label>
			<label2>$ADDON[script.skinshortcuts 32007]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/addons.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">addons</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/programs.jpg</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 10040]</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">programs</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<label>$LOCALIZE[10134]</label>
			<label2>$LOCALIZE[70047]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/favourites.png</icon>
			<thumb />
			<property name="labelID">10134</property>
			<property name="defaultID">favorites</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/videos.jpg</property>
			<property name="backgroundName">Favorites</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(FavouritesBrowser)</onclick>
			<property name="path">ActivateWindow(FavouritesBrowser)</property>
			<property name="list">FavouritesBrowser</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-10134</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="15">
			<property name="id">$NUMBER[15]</property>
			<label>Netflix</label>
			<label2 />
			<icon>special://home/addons/skin.titan.vanilla/media/images/netflix_thumb.jpg</icon>
			<thumb />
			<property name="labelID">netflix</property>
			<property name="defaultID">netflix</property>
			<visible>System.hasAddon(plugin.video.netflix)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">RunAddon(plugin.video.netflix)</onclick>
			<property name="path">RunAddon(plugin.video.netflix)</property>
			<property name="list">RunAddon(plugin.video.netflix)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">netflix</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="16">
			<property name="id">$NUMBER[16]</property>
			<label>YouTube</label>
			<label2 />
			<icon>special://home/addons/skin.titan.vanilla/media/images/youtube_thumb.jpg</icon>
			<thumb />
			<property name="labelID">youtube</property>
			<property name="defaultID">youtube</property>
			<visible>System.hasAddon(plugin.video.youtube)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">RunAddon(plugin.video.youtube)</onclick>
			<property name="path">RunAddon(plugin.video.youtube)</property>
			<property name="list">RunAddon(plugin.video.youtube)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">youtube</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="17">
			<property name="id">$NUMBER[17]</property>
			<label>Spotify</label>
			<label2 />
			<icon>special://home/addons/skin.titan.vanilla/media/images/spotify_thumb.jpg</icon>
			<thumb />
			<property name="labelID">spotify</property>
			<property name="defaultID">spotify</property>
			<visible>System.hasAddon(plugin.audio.spotify)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">RunAddon(plugin.audio.spotify)</onclick>
			<property name="path">RunAddon(plugin.audio.spotify)</property>
			<property name="list">RunAddon(plugin.audio.spotify)</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">spotify</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="18">
			<property name="id">$NUMBER[18]</property>
			<label>$ADDON[script.skinshortcuts 32032]</label>
			<label2>$ADDON[script.skinshortcuts 32032]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/videos.png</icon>
			<thumb />
			<property name="labelID">dvd</property>
			<property name="defaultID">dvd</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_play disc.jpg</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32032]</property>
			<visible>System.HasMediaDVD | System.HasMediaAudioCD</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">PlayDisc</onclick>
			<property name="path">PlayDisc</property>
			<property name="list">PlayDisc</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">dvd</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="19">
			<property name="id">$NUMBER[19]</property>
			<label>$LOCALIZE[10004]</label>
			<label2>$LOCALIZE[70009]</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">settings</property>
			<property name="widget">systeminfo</property>
			<property name="widgetName">$LOCALIZE[130]</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[SystemInfoWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/settings.jpg</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 10004]</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0) + ![String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]]">ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + Integer.IsGreater(Container(4445).NumItems,0)] | [String.Contains(Skin.String(HomeLayout), netflix) | String.Contains(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$ADDON[script.skinshortcuts 32066]</label>
			<label2>Live-TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">32066</property>
			<property name="defaultID">32066</property>
			<visible>[PVR.HasTVChannels] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>PlayPvrTV</onclick>
			<property name="path">PlayPvrTV</property>
			<property name="list">PlayPvrTV</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19019]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19163]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19040]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[137]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),programs)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),programs)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),programs)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),programs)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">18</property>
			<label>$ADDON[script.skinshortcuts 32032]</label>
			<label2>playdvd</label2>
			<icon>resource://resource.images.skinicons.wide/videos.png</icon>
			<thumb />
			<property name="labelID">dvd</property>
			<property name="defaultID">dvd</property>
			<visible>[System.HasMediaDVD] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),dvd)</visible>
			<onclick>XBMC.PlayDVD()</onclick>
			<property name="path">XBMC.PlayDVD()</property>
			<property name="list">XBMC.PlayDVD()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">dvd</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">18</property>
			<label>Tray öffnen</label>
			<label2>Benutzerdefinierte Einträge</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">trayoffnen</property>
			<property name="defaultID">14206</property>
			<onclick>EjectTray()</onclick>
			<property name="path">EjectTray()</property>
			<property name="list">EjectTray()</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),dvd)</visible>
			<property name="group">dvd</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">19</property>
			<label>Power-Menü</label>
			<label2>Benutzerdefinierte Einträge</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">power-menu</property>
			<property name="defaultID">13015</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[10001]</label>
			<label2>Programme</label2>
			<icon>resource://resource.images.skinicons.wide/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,addons://sources/executable/,return)</onclick>
			<property name="path">ActivateWindow(Programs,addons://sources/executable/,return)</property>
			<property name="list">addons://sources/executable/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[1037]</label>
			<label2>Videos</label2>
			<icon>DefaultAddonVideo.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(10025,addons://sources/video/,return)</onclick>
			<property name="path">ActivateWindow(10025,addons://sources/video/,return)</property>
			<property name="list">addons://sources/video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[1038]</label>
			<label2>Musik</label2>
			<icon>DefaultAddonMusic.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[1039]</label>
			<label2>Bilder</label2>
			<icon>DefaultAddonPicture.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[10006]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/videos.png</icon>
			<thumb />
			<property name="labelID">10006</property>
			<property name="defaultID">videos</property>
			<onclick>ActivateWindow(Videos,return)</onclick>
			<property name="path">ActivateWindow(Videos,return)</property>
			<property name="list">Videos</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">20</property>
			<label>Standby</label>
			<label2>Benutzerdefinierte Einträge</label2>
			<icon>common/sleep.png</icon>
			<thumb />
			<property name="labelID">standby</property>
			<property name="defaultID">13011</property>
			<visible>[System.CanSuspend] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Suspend</onclick>
			<property name="path">Suspend</property>
			<property name="list">Suspend</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13016]</label>
			<label2 />
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>[System.CanPowerDown] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Powerdown</onclick>
			<property name="path">Powerdown</property>
			<property name="list">Powerdown</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13010]</label>
			<label2 />
			<icon>common/hybernate.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>[System.CanHibernate] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Hibernate</onclick>
			<property name="path">Hibernate</property>
			<property name="list">Hibernate</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13013]</label>
			<label2 />
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>[System.CanReboot] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reset</onclick>
			<property name="path">Reset</property>
			<property name="list">Reset</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[20150]</label>
			<label2 />
			<icon>common/shutdown-timer.png</icon>
			<thumb />
			<property name="labelID">20150</property>
			<property name="defaultID">20150</property>
			<property name="translatedPath">AlarmClock(shutdowntimer,Shutdown())</property>
			<visible>[!System.HasAlarm(shutdowntimer) + [System.CanPowerDown | System.CanSuspend | System.CanHibernate]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>AlarmClock(shutdowntimer,Shutdown())</onclick>
			<property name="path">AlarmClock(shutdowntimer,Shutdown())</property>
			<property name="list">AlarmClock(shutdowntimer,Shutdown())</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[20151]</label>
			<label2 />
			<icon>common/cancel-timer.png</icon>
			<thumb />
			<property name="labelID">20151</property>
			<property name="defaultID">20151</property>
			<property name="translatedPath">CancelAlarm(shutdowntimer)</property>
			<visible>[System.HasAlarm(shutdowntimer)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>CancelAlarm(shutdowntimer)</onclick>
			<property name="path">CancelAlarm(shutdowntimer)</property>
			<property name="list">CancelAlarm(shutdowntimer)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-livetv">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$ADDON[script.skinshortcuts 32066]</label>
			<label2>Live-TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">32066</property>
			<property name="defaultID">32066</property>
			<visible>PVR.HasTVChannels</visible>
			<onclick>PlayPvrTV</onclick>
			<property name="path">PlayPvrTV</property>
			<property name="list">PlayPvrTV</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19019]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19163]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19040]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[137]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-livetv">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$ADDON[script.skinshortcuts 32066]</label>
			<label2>Live-TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">32066</property>
			<property name="defaultID">32066</property>
			<visible>[PVR.HasTVChannels] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>PlayPvrTV</onclick>
			<property name="path">PlayPvrTV</property>
			<property name="list">PlayPvrTV</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19019]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19163]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[19040]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[137]</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),livetv)</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">livetv</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-mediathek">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-mediathek">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-movies">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-movies">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-tvshows">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-tvshows">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-10005">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-10005">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-musicvideos">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-musicvideos">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-radio">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-radio">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-search">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-search">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-weather">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-weather">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-pictures">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-pictures">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-10006">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-10006">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-15016">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-15016">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-programs">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-programs">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),programs)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),programs)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),programs)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),programs)</visible>
			<property name="group">programs</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-num-10134">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-10134">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-netflix">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-netflix">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-youtube">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-youtube">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-spotify">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-spotify">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-dvd">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">18</property>
			<label>$ADDON[script.skinshortcuts 32032]</label>
			<label2>playdvd</label2>
			<icon>resource://resource.images.skinicons.wide/videos.png</icon>
			<thumb />
			<property name="labelID">dvd</property>
			<property name="defaultID">dvd</property>
			<visible>System.HasMediaDVD</visible>
			<onclick>XBMC.PlayDVD()</onclick>
			<property name="path">XBMC.PlayDVD()</property>
			<property name="list">XBMC.PlayDVD()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">dvd</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">18</property>
			<label>Tray öffnen</label>
			<label2>Benutzerdefinierte Einträge</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">trayoffnen</property>
			<property name="defaultID">14206</property>
			<onclick>EjectTray()</onclick>
			<property name="path">EjectTray()</property>
			<property name="list">EjectTray()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">dvd</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-dvd">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">18</property>
			<label>$ADDON[script.skinshortcuts 32032]</label>
			<label2>playdvd</label2>
			<icon>resource://resource.images.skinicons.wide/videos.png</icon>
			<thumb />
			<property name="labelID">dvd</property>
			<property name="defaultID">dvd</property>
			<visible>[System.HasMediaDVD] + String.IsEqual(Window(10000).Property(submenuVisibility),dvd)</visible>
			<onclick>XBMC.PlayDVD()</onclick>
			<property name="path">XBMC.PlayDVD()</property>
			<property name="list">XBMC.PlayDVD()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">dvd</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">18</property>
			<label>Tray öffnen</label>
			<label2>Benutzerdefinierte Einträge</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">trayoffnen</property>
			<property name="defaultID">14206</property>
			<onclick>EjectTray()</onclick>
			<property name="path">EjectTray()</property>
			<property name="list">EjectTray()</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),dvd)</visible>
			<property name="group">dvd</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">19</property>
			<label>Power-Menü</label>
			<label2>Benutzerdefinierte Einträge</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">power-menu</property>
			<property name="defaultID">13015</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[10001]</label>
			<label2>Programme</label2>
			<icon>resource://resource.images.skinicons.wide/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,addons://sources/executable/,return)</onclick>
			<property name="path">ActivateWindow(Programs,addons://sources/executable/,return)</property>
			<property name="list">addons://sources/executable/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[1037]</label>
			<label2>Videos</label2>
			<icon>DefaultAddonVideo.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(10025,addons://sources/video/,return)</onclick>
			<property name="path">ActivateWindow(10025,addons://sources/video/,return)</property>
			<property name="list">addons://sources/video/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[1038]</label>
			<label2>Musik</label2>
			<icon>DefaultAddonMusic.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[1039]</label>
			<label2>Bilder</label2>
			<icon>DefaultAddonPicture.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[10006]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/videos.png</icon>
			<thumb />
			<property name="labelID">10006</property>
			<property name="defaultID">videos</property>
			<onclick>ActivateWindow(Videos,return)</onclick>
			<property name="path">ActivateWindow(Videos,return)</property>
			<property name="list">Videos</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>system.getbool(eventlog.enabled)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">19</property>
			<label>Power-Menü</label>
			<label2>Benutzerdefinierte Einträge</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">power-menu</property>
			<property name="defaultID">13015</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[10001]</label>
			<label2>Programme</label2>
			<icon>resource://resource.images.skinicons.wide/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,addons://sources/executable/,return)</onclick>
			<property name="path">ActivateWindow(Programs,addons://sources/executable/,return)</property>
			<property name="list">addons://sources/executable/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[1037]</label>
			<label2>Videos</label2>
			<icon>DefaultAddonVideo.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(10025,addons://sources/video/,return)</onclick>
			<property name="path">ActivateWindow(10025,addons://sources/video/,return)</property>
			<property name="list">addons://sources/video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[1038]</label>
			<label2>Musik</label2>
			<icon>DefaultAddonMusic.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[1039]</label>
			<label2>Bilder</label2>
			<icon>DefaultAddonPicture.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[10006]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/videos.png</icon>
			<thumb />
			<property name="labelID">10006</property>
			<property name="defaultID">videos</property>
			<onclick>ActivateWindow(Videos,return)</onclick>
			<property name="path">ActivateWindow(Videos,return)</property>
			<property name="list">Videos</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">19</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">20</property>
			<label>Standby</label>
			<label2>Benutzerdefinierte Einträge</label2>
			<icon>common/sleep.png</icon>
			<thumb />
			<property name="labelID">standby</property>
			<property name="defaultID">13011</property>
			<visible>System.CanSuspend</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Suspend</onclick>
			<property name="path">Suspend</property>
			<property name="list">Suspend</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13016]</label>
			<label2 />
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>System.CanPowerDown</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Powerdown</onclick>
			<property name="path">Powerdown</property>
			<property name="list">Powerdown</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>System.ShowExitButton</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13010]</label>
			<label2 />
			<icon>common/hybernate.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>System.CanHibernate</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Hibernate</onclick>
			<property name="path">Hibernate</property>
			<property name="list">Hibernate</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13013]</label>
			<label2 />
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>System.CanReboot</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reset</onclick>
			<property name="path">Reset</property>
			<property name="list">Reset</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[20150]</label>
			<label2 />
			<icon>common/shutdown-timer.png</icon>
			<thumb />
			<property name="labelID">20150</property>
			<property name="defaultID">20150</property>
			<property name="translatedPath">AlarmClock(shutdowntimer,Shutdown())</property>
			<visible>!System.HasAlarm(shutdowntimer) + [System.CanPowerDown | System.CanSuspend | System.CanHibernate]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>AlarmClock(shutdowntimer,Shutdown())</onclick>
			<property name="path">AlarmClock(shutdowntimer,Shutdown())</property>
			<property name="list">AlarmClock(shutdowntimer,Shutdown())</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[20151]</label>
			<label2 />
			<icon>common/cancel-timer.png</icon>
			<thumb />
			<property name="labelID">20151</property>
			<property name="defaultID">20151</property>
			<property name="translatedPath">CancelAlarm(shutdowntimer)</property>
			<visible>System.HasAlarm(shutdowntimer)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>CancelAlarm(shutdowntimer)</onclick>
			<property name="path">CancelAlarm(shutdowntimer)</property>
			<property name="list">CancelAlarm(shutdowntimer)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">20</property>
			<label>Standby</label>
			<label2>Benutzerdefinierte Einträge</label2>
			<icon>common/sleep.png</icon>
			<thumb />
			<property name="labelID">standby</property>
			<property name="defaultID">13011</property>
			<visible>[System.CanSuspend] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Suspend</onclick>
			<property name="path">Suspend</property>
			<property name="list">Suspend</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13016]</label>
			<label2 />
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>[System.CanPowerDown] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Powerdown</onclick>
			<property name="path">Powerdown</property>
			<property name="list">Powerdown</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13010]</label>
			<label2 />
			<icon>common/hybernate.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>[System.CanHibernate] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Hibernate</onclick>
			<property name="path">Hibernate</property>
			<property name="list">Hibernate</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[13013]</label>
			<label2 />
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>[System.CanReboot] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reset</onclick>
			<property name="path">Reset</property>
			<property name="list">Reset</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[20150]</label>
			<label2 />
			<icon>common/shutdown-timer.png</icon>
			<thumb />
			<property name="labelID">20150</property>
			<property name="defaultID">20150</property>
			<property name="translatedPath">AlarmClock(shutdowntimer,Shutdown())</property>
			<visible>[!System.HasAlarm(shutdowntimer) + [System.CanPowerDown | System.CanSuspend | System.CanHibernate]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>AlarmClock(shutdowntimer,Shutdown())</onclick>
			<property name="path">AlarmClock(shutdowntimer,Shutdown())</property>
			<property name="list">AlarmClock(shutdowntimer,Shutdown())</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">20</property>
			<label>$LOCALIZE[20151]</label>
			<label2 />
			<icon>common/cancel-timer.png</icon>
			<thumb />
			<property name="labelID">20151</property>
			<property name="defaultID">20151</property>
			<property name="translatedPath">CancelAlarm(shutdowntimer)</property>
			<visible>[System.HasAlarm(shutdowntimer)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>CancelAlarm(shutdowntimer)</onclick>
			<property name="path">CancelAlarm(shutdowntimer)</property>
			<property name="list">CancelAlarm(shutdowntimer)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-template-Widgets">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-Widgets-Master user</include>
		</include>
	<include name="skinshortcuts-template-Widgets-Master user">
		<include name="widget_header_single" content="widget_header_single" condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true">
			<param name="mainmenuid" value="1" />
			<param name="submenuid" value="livetv" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="1510" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="$LOCALIZE[19017]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1510" />
			<param name="widgetName" value="$LOCALIZE[19017]" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="pvr" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload)]$INFO[Window(home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="1520" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="1530" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="1540" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="1550" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="1560" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="1570" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="1580" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_single" content="widget_header_single" condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true">
			<param name="mainmenuid" value="3" />
			<param name="submenuid" value="movies" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="3510" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32029]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3510" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32029]" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-movies,0) | !Skin.String(widgetvalue-movies)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="3520" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="$LOCALIZE[20386]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3520" />
			<param name="widgetName" value="$LOCALIZE[20386]" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="3530" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="3540" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="3550" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="3560" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="3570" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="3580" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-movies,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_single" content="widget_header_single" condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true">
			<param name="mainmenuid" value="4" />
			<param name="submenuid" value="tvshows" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="4510" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32002]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4510" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32002]" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload-episodes)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-tvshows,0) | !Skin.String(widgetvalue-tvshows)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="4520" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="$LOCALIZE[20387]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4520" />
			<param name="widgetName" value="$LOCALIZE[20387]" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload-episodes)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="4530" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="4540" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="4550" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="4560" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="4570" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="4580" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-tvshows,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_single" content="widget_header_single" condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true">
			<param name="mainmenuid" value="5" />
			<param name="submenuid" value="num-10005" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="square" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="5510" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetName" value="$LOCALIZE[359]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5510" />
			<param name="widgetName" value="$LOCALIZE[359]" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="music" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]" />
			<param name="widgetStyle" value="widget_layout_square" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-num-10005,0) | !Skin.String(widgetvalue-num-10005)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="5520" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32012]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5520" />
			<param name="widgetName" value="$ADDON[script.skin.helper.widgets 32012]" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="music" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-10005,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="5530" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-10005,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="5540" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-10005,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="5550" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-10005,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="5560" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-10005,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="5570" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-10005,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="5580" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10005" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-num-10005,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_single" content="widget_header_single" condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true">
			<param name="mainmenuid" value="6" />
			<param name="submenuid" value="musicvideos" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="6510" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="$LOCALIZE[20390]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6510" />
			<param name="widgetName" value="$LOCALIZE[20390]" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload-musicvideos)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-musicvideos,0) | !Skin.String(widgetvalue-musicvideos)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="6520" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="6530" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="6540" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="6550" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="6560" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="6570" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="6580" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="6580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-musicvideos,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_single" content="widget_header_single" condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true">
			<param name="mainmenuid" value="9" />
			<param name="submenuid" value="weather" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="9510" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="$LOCALIZE[8]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="weather" />
			<param name="widgetid" value="9510" />
			<param name="widgetName" value="$LOCALIZE[8]" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[WeatherWidget]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="9520" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="9530" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="9540" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="9550" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="9560" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="9570" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="9580" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="9580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_single" content="widget_header_single" condition="!Skin.String(HomeLayout,win10) + ![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + true">
			<param name="mainmenuid" value="19" />
			<param name="submenuid" value="settings" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + true">
			<param name="widgetid" value="19510" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="$LOCALIZE[130]" />
			</include>
		<include name="widget_base" content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="systeminfo" />
			<param name="widgetid" value="19510" />
			<param name="widgetName" value="$LOCALIZE[130]" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[SystemInfoWidget]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)]]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="19520" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="19520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,1)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="19530" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="19530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,2)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="19540" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="19540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,3)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="19550" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="19550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,4)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="19560" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="19560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,5)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="19570" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="19570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,6)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		<include name="widget_header_multi" content="widget_header_multi" condition="!Skin.String(HomeLayout,win10) + true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)] + false">
			<param name="widgetid" value="19580" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include name="widget_base" content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="19580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] | [![true + [String.Contains(Skin.String(HomeLayout),ver) | String.Contains(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,7)]" />
			<param name="multiRows" value="false + String.Contains(Skin.String(HomeLayout),ver)" />
			</include>
		</include>
	<include name="skinshortcuts-template-spotlightwidget">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-spotlightwidget-Master user</include>
		</include>
	<include name="skinshortcuts-template-spotlightwidget-Master user">
		<control type="panel" id="1508">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),movies)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</content>
			</control>
		<control type="panel" id="1508">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</content>
			</control>
		</include>
	<variable name="1510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recordings&amp;mediatype=pvr&amp;limit=25&amp;reload=$INFO[Window(home).Property(widgetreload)]$INFO[Window(home).Property(widgetreload2)]</value>
		</variable>
	<variable name="widgetinfolabel-1510">
		<value condition="String.Contains(Container(1510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1510).ListItem.label] $INFO[Container(1510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Title) + String.Contains(Container(1510).ListItem.FolderPath, pvr://)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Season) + !String.IsEmpty(Container(1510).ListItem.Episode) + !String.Contains(Container(1510).ListItem.TvShowTitle,Container(1510).ListItem.Title)">[UPPERCASE]S$INFO[Container(1510).ListItem.Season]E$INFO[Container(1510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Title)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Label)">$INFO[Container(1510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1510">
		<value condition="!String.IsEmpty(Container(1510).ListItem.TvShowTitle) + !String.IsEmpty(Container(1510).ListItem.Genre)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.TvShowTitle)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Premiered,, • ]$INFO[Container(1510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Year)">$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Duration,,min. • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Artist) + !String.IsEmpty(Container(1510).ListItem.Album)">$INFO[Container(1510).ListItem.Artist,, • ]$INFO[Container(1510).ListItem.Album,, • ]$INFO[Container(1510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Property(StartTime))">$INFO[Container(1510).ListItem.Property(ChannelName),, • ]$INFO[Container(1510).ListItem.Property(StartTime),, - ]$INFO[Container(1510).ListItem.Property(EndTime),, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.StartTime)">$INFO[Container(1510).ListItem.ChannelName,, • ]$INFO[Container(1510).ListItem.StartTime,, - ]$INFO[Container(1510).ListItem.EndTime,, • ]$INFO[Container(1510).ListItem.Genre]</value>
		</variable>
	<variable name="1520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1520">
		<value condition="String.Contains(Container(1520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1520).ListItem.label] $INFO[Container(1520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Title) + String.Contains(Container(1520).ListItem.FolderPath, pvr://)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Season) + !String.IsEmpty(Container(1520).ListItem.Episode) + !String.Contains(Container(1520).ListItem.TvShowTitle,Container(1520).ListItem.Title)">[UPPERCASE]S$INFO[Container(1520).ListItem.Season]E$INFO[Container(1520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Title)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Label)">$INFO[Container(1520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1520">
		<value condition="!String.IsEmpty(Container(1520).ListItem.TvShowTitle) + !String.IsEmpty(Container(1520).ListItem.Genre)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.TvShowTitle)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Premiered,, • ]$INFO[Container(1520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Year)">$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Duration,,min. • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Artist) + !String.IsEmpty(Container(1520).ListItem.Album)">$INFO[Container(1520).ListItem.Artist,, • ]$INFO[Container(1520).ListItem.Album,, • ]$INFO[Container(1520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Property(StartTime))">$INFO[Container(1520).ListItem.Property(ChannelName),, • ]$INFO[Container(1520).ListItem.Property(StartTime),, - ]$INFO[Container(1520).ListItem.Property(EndTime),, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.StartTime)">$INFO[Container(1520).ListItem.ChannelName,, • ]$INFO[Container(1520).ListItem.StartTime,, - ]$INFO[Container(1520).ListItem.EndTime,, • ]$INFO[Container(1520).ListItem.Genre]</value>
		</variable>
	<variable name="1530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1530">
		<value condition="String.Contains(Container(1530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1530).ListItem.label] $INFO[Container(1530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Title) + String.Contains(Container(1530).ListItem.FolderPath, pvr://)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Season) + !String.IsEmpty(Container(1530).ListItem.Episode) + !String.Contains(Container(1530).ListItem.TvShowTitle,Container(1530).ListItem.Title)">[UPPERCASE]S$INFO[Container(1530).ListItem.Season]E$INFO[Container(1530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Title)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Label)">$INFO[Container(1530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1530">
		<value condition="!String.IsEmpty(Container(1530).ListItem.TvShowTitle) + !String.IsEmpty(Container(1530).ListItem.Genre)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.TvShowTitle)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Premiered,, • ]$INFO[Container(1530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Year)">$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Duration,,min. • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Artist) + !String.IsEmpty(Container(1530).ListItem.Album)">$INFO[Container(1530).ListItem.Artist,, • ]$INFO[Container(1530).ListItem.Album,, • ]$INFO[Container(1530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Property(StartTime))">$INFO[Container(1530).ListItem.Property(ChannelName),, • ]$INFO[Container(1530).ListItem.Property(StartTime),, - ]$INFO[Container(1530).ListItem.Property(EndTime),, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.StartTime)">$INFO[Container(1530).ListItem.ChannelName,, • ]$INFO[Container(1530).ListItem.StartTime,, - ]$INFO[Container(1530).ListItem.EndTime,, • ]$INFO[Container(1530).ListItem.Genre]</value>
		</variable>
	<variable name="1540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1540">
		<value condition="String.Contains(Container(1540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1540).ListItem.label] $INFO[Container(1540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Title) + String.Contains(Container(1540).ListItem.FolderPath, pvr://)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Season) + !String.IsEmpty(Container(1540).ListItem.Episode) + !String.Contains(Container(1540).ListItem.TvShowTitle,Container(1540).ListItem.Title)">[UPPERCASE]S$INFO[Container(1540).ListItem.Season]E$INFO[Container(1540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Title)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Label)">$INFO[Container(1540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1540">
		<value condition="!String.IsEmpty(Container(1540).ListItem.TvShowTitle) + !String.IsEmpty(Container(1540).ListItem.Genre)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.TvShowTitle)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Premiered,, • ]$INFO[Container(1540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Year)">$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Duration,,min. • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Artist) + !String.IsEmpty(Container(1540).ListItem.Album)">$INFO[Container(1540).ListItem.Artist,, • ]$INFO[Container(1540).ListItem.Album,, • ]$INFO[Container(1540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Property(StartTime))">$INFO[Container(1540).ListItem.Property(ChannelName),, • ]$INFO[Container(1540).ListItem.Property(StartTime),, - ]$INFO[Container(1540).ListItem.Property(EndTime),, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.StartTime)">$INFO[Container(1540).ListItem.ChannelName,, • ]$INFO[Container(1540).ListItem.StartTime,, - ]$INFO[Container(1540).ListItem.EndTime,, • ]$INFO[Container(1540).ListItem.Genre]</value>
		</variable>
	<variable name="1550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1550">
		<value condition="String.Contains(Container(1550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1550).ListItem.label] $INFO[Container(1550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Title) + String.Contains(Container(1550).ListItem.FolderPath, pvr://)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Season) + !String.IsEmpty(Container(1550).ListItem.Episode) + !String.Contains(Container(1550).ListItem.TvShowTitle,Container(1550).ListItem.Title)">[UPPERCASE]S$INFO[Container(1550).ListItem.Season]E$INFO[Container(1550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Title)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Label)">$INFO[Container(1550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1550">
		<value condition="!String.IsEmpty(Container(1550).ListItem.TvShowTitle) + !String.IsEmpty(Container(1550).ListItem.Genre)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.TvShowTitle)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Premiered,, • ]$INFO[Container(1550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Year)">$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Duration,,min. • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Artist) + !String.IsEmpty(Container(1550).ListItem.Album)">$INFO[Container(1550).ListItem.Artist,, • ]$INFO[Container(1550).ListItem.Album,, • ]$INFO[Container(1550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Property(StartTime))">$INFO[Container(1550).ListItem.Property(ChannelName),, • ]$INFO[Container(1550).ListItem.Property(StartTime),, - ]$INFO[Container(1550).ListItem.Property(EndTime),, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.StartTime)">$INFO[Container(1550).ListItem.ChannelName,, • ]$INFO[Container(1550).ListItem.StartTime,, - ]$INFO[Container(1550).ListItem.EndTime,, • ]$INFO[Container(1550).ListItem.Genre]</value>
		</variable>
	<variable name="1560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1560">
		<value condition="String.Contains(Container(1560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1560).ListItem.label] $INFO[Container(1560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Title) + String.Contains(Container(1560).ListItem.FolderPath, pvr://)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Season) + !String.IsEmpty(Container(1560).ListItem.Episode) + !String.Contains(Container(1560).ListItem.TvShowTitle,Container(1560).ListItem.Title)">[UPPERCASE]S$INFO[Container(1560).ListItem.Season]E$INFO[Container(1560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Title)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Label)">$INFO[Container(1560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1560">
		<value condition="!String.IsEmpty(Container(1560).ListItem.TvShowTitle) + !String.IsEmpty(Container(1560).ListItem.Genre)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.TvShowTitle)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Premiered,, • ]$INFO[Container(1560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Year)">$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Duration,,min. • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Artist) + !String.IsEmpty(Container(1560).ListItem.Album)">$INFO[Container(1560).ListItem.Artist,, • ]$INFO[Container(1560).ListItem.Album,, • ]$INFO[Container(1560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Property(StartTime))">$INFO[Container(1560).ListItem.Property(ChannelName),, • ]$INFO[Container(1560).ListItem.Property(StartTime),, - ]$INFO[Container(1560).ListItem.Property(EndTime),, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.StartTime)">$INFO[Container(1560).ListItem.ChannelName,, • ]$INFO[Container(1560).ListItem.StartTime,, - ]$INFO[Container(1560).ListItem.EndTime,, • ]$INFO[Container(1560).ListItem.Genre]</value>
		</variable>
	<variable name="1570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1570">
		<value condition="String.Contains(Container(1570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1570).ListItem.label] $INFO[Container(1570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Title) + String.Contains(Container(1570).ListItem.FolderPath, pvr://)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Season) + !String.IsEmpty(Container(1570).ListItem.Episode) + !String.Contains(Container(1570).ListItem.TvShowTitle,Container(1570).ListItem.Title)">[UPPERCASE]S$INFO[Container(1570).ListItem.Season]E$INFO[Container(1570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Title)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Label)">$INFO[Container(1570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1570">
		<value condition="!String.IsEmpty(Container(1570).ListItem.TvShowTitle) + !String.IsEmpty(Container(1570).ListItem.Genre)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.TvShowTitle)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Premiered,, • ]$INFO[Container(1570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Year)">$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Duration,,min. • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Artist) + !String.IsEmpty(Container(1570).ListItem.Album)">$INFO[Container(1570).ListItem.Artist,, • ]$INFO[Container(1570).ListItem.Album,, • ]$INFO[Container(1570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Property(StartTime))">$INFO[Container(1570).ListItem.Property(ChannelName),, • ]$INFO[Container(1570).ListItem.Property(StartTime),, - ]$INFO[Container(1570).ListItem.Property(EndTime),, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.StartTime)">$INFO[Container(1570).ListItem.ChannelName,, • ]$INFO[Container(1570).ListItem.StartTime,, - ]$INFO[Container(1570).ListItem.EndTime,, • ]$INFO[Container(1570).ListItem.Genre]</value>
		</variable>
	<variable name="1580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1580">
		<value condition="String.Contains(Container(1580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1580).ListItem.label] $INFO[Container(1580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Title) + String.Contains(Container(1580).ListItem.FolderPath, pvr://)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Season) + !String.IsEmpty(Container(1580).ListItem.Episode) + !String.Contains(Container(1580).ListItem.TvShowTitle,Container(1580).ListItem.Title)">[UPPERCASE]S$INFO[Container(1580).ListItem.Season]E$INFO[Container(1580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Title)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Label)">$INFO[Container(1580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1580">
		<value condition="!String.IsEmpty(Container(1580).ListItem.TvShowTitle) + !String.IsEmpty(Container(1580).ListItem.Genre)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.TvShowTitle)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Premiered,, • ]$INFO[Container(1580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Year)">$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Duration,,min. • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Artist) + !String.IsEmpty(Container(1580).ListItem.Album)">$INFO[Container(1580).ListItem.Artist,, • ]$INFO[Container(1580).ListItem.Album,, • ]$INFO[Container(1580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Property(StartTime))">$INFO[Container(1580).ListItem.Property(ChannelName),, • ]$INFO[Container(1580).ListItem.Property(StartTime),, - ]$INFO[Container(1580).ListItem.Property(EndTime),, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.StartTime)">$INFO[Container(1580).ListItem.ChannelName,, • ]$INFO[Container(1580).ListItem.StartTime,, - ]$INFO[Container(1580).ListItem.EndTime,, • ]$INFO[Container(1580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-1">
		<value condition="Skin.String(widgetvalue-livetv,7)" />
		<value condition="Skin.String(widgetvalue-livetv,6)" />
		<value condition="Skin.String(widgetvalue-livetv,5)" />
		<value condition="Skin.String(widgetvalue-livetv,4)" />
		<value condition="Skin.String(widgetvalue-livetv,3)" />
		<value condition="Skin.String(widgetvalue-livetv,2)" />
		<value condition="Skin.String(widgetvalue-livetv,1)" />
		<value>$LOCALIZE[19017]</value>
		</variable>
	<variable name="3510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=INPROGRESSANDRECOMMENDED&amp;mediatype=MOVIES&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</value>
		</variable>
	<variable name="widgetinfolabel-3510">
		<value condition="String.Contains(Container(3510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3510).ListItem.label] $INFO[Container(3510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Title) + String.Contains(Container(3510).ListItem.FolderPath, pvr://)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Season) + !String.IsEmpty(Container(3510).ListItem.Episode) + !String.Contains(Container(3510).ListItem.TvShowTitle,Container(3510).ListItem.Title)">[UPPERCASE]S$INFO[Container(3510).ListItem.Season]E$INFO[Container(3510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Title)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Label)">$INFO[Container(3510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3510">
		<value condition="!String.IsEmpty(Container(3510).ListItem.TvShowTitle) + !String.IsEmpty(Container(3510).ListItem.Genre)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.TvShowTitle)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Premiered,, • ]$INFO[Container(3510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Year)">$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Duration,,min. • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Artist) + !String.IsEmpty(Container(3510).ListItem.Album)">$INFO[Container(3510).ListItem.Artist,, • ]$INFO[Container(3510).ListItem.Album,, • ]$INFO[Container(3510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Property(StartTime))">$INFO[Container(3510).ListItem.Property(ChannelName),, • ]$INFO[Container(3510).ListItem.Property(StartTime),, - ]$INFO[Container(3510).ListItem.Property(EndTime),, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.StartTime)">$INFO[Container(3510).ListItem.ChannelName,, • ]$INFO[Container(3510).ListItem.StartTime,, - ]$INFO[Container(3510).ListItem.EndTime,, • ]$INFO[Container(3510).ListItem.Genre]</value>
		</variable>
	<variable name="3520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</value>
		</variable>
	<variable name="widgetinfolabel-3520">
		<value condition="String.Contains(Container(3520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3520).ListItem.label] $INFO[Container(3520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Title) + String.Contains(Container(3520).ListItem.FolderPath, pvr://)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Season) + !String.IsEmpty(Container(3520).ListItem.Episode) + !String.Contains(Container(3520).ListItem.TvShowTitle,Container(3520).ListItem.Title)">[UPPERCASE]S$INFO[Container(3520).ListItem.Season]E$INFO[Container(3520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Title)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Label)">$INFO[Container(3520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3520">
		<value condition="!String.IsEmpty(Container(3520).ListItem.TvShowTitle) + !String.IsEmpty(Container(3520).ListItem.Genre)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.TvShowTitle)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Premiered,, • ]$INFO[Container(3520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Year)">$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Duration,,min. • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Artist) + !String.IsEmpty(Container(3520).ListItem.Album)">$INFO[Container(3520).ListItem.Artist,, • ]$INFO[Container(3520).ListItem.Album,, • ]$INFO[Container(3520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Property(StartTime))">$INFO[Container(3520).ListItem.Property(ChannelName),, • ]$INFO[Container(3520).ListItem.Property(StartTime),, - ]$INFO[Container(3520).ListItem.Property(EndTime),, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.StartTime)">$INFO[Container(3520).ListItem.ChannelName,, • ]$INFO[Container(3520).ListItem.StartTime,, - ]$INFO[Container(3520).ListItem.EndTime,, • ]$INFO[Container(3520).ListItem.Genre]</value>
		</variable>
	<variable name="3530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3530">
		<value condition="String.Contains(Container(3530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3530).ListItem.label] $INFO[Container(3530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Title) + String.Contains(Container(3530).ListItem.FolderPath, pvr://)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Season) + !String.IsEmpty(Container(3530).ListItem.Episode) + !String.Contains(Container(3530).ListItem.TvShowTitle,Container(3530).ListItem.Title)">[UPPERCASE]S$INFO[Container(3530).ListItem.Season]E$INFO[Container(3530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Title)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Label)">$INFO[Container(3530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3530">
		<value condition="!String.IsEmpty(Container(3530).ListItem.TvShowTitle) + !String.IsEmpty(Container(3530).ListItem.Genre)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.TvShowTitle)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Premiered,, • ]$INFO[Container(3530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Year)">$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Duration,,min. • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Artist) + !String.IsEmpty(Container(3530).ListItem.Album)">$INFO[Container(3530).ListItem.Artist,, • ]$INFO[Container(3530).ListItem.Album,, • ]$INFO[Container(3530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Property(StartTime))">$INFO[Container(3530).ListItem.Property(ChannelName),, • ]$INFO[Container(3530).ListItem.Property(StartTime),, - ]$INFO[Container(3530).ListItem.Property(EndTime),, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.StartTime)">$INFO[Container(3530).ListItem.ChannelName,, • ]$INFO[Container(3530).ListItem.StartTime,, - ]$INFO[Container(3530).ListItem.EndTime,, • ]$INFO[Container(3530).ListItem.Genre]</value>
		</variable>
	<variable name="3540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3540">
		<value condition="String.Contains(Container(3540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3540).ListItem.label] $INFO[Container(3540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Title) + String.Contains(Container(3540).ListItem.FolderPath, pvr://)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Season) + !String.IsEmpty(Container(3540).ListItem.Episode) + !String.Contains(Container(3540).ListItem.TvShowTitle,Container(3540).ListItem.Title)">[UPPERCASE]S$INFO[Container(3540).ListItem.Season]E$INFO[Container(3540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Title)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Label)">$INFO[Container(3540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3540">
		<value condition="!String.IsEmpty(Container(3540).ListItem.TvShowTitle) + !String.IsEmpty(Container(3540).ListItem.Genre)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.TvShowTitle)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Premiered,, • ]$INFO[Container(3540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Year)">$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Duration,,min. • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Artist) + !String.IsEmpty(Container(3540).ListItem.Album)">$INFO[Container(3540).ListItem.Artist,, • ]$INFO[Container(3540).ListItem.Album,, • ]$INFO[Container(3540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Property(StartTime))">$INFO[Container(3540).ListItem.Property(ChannelName),, • ]$INFO[Container(3540).ListItem.Property(StartTime),, - ]$INFO[Container(3540).ListItem.Property(EndTime),, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.StartTime)">$INFO[Container(3540).ListItem.ChannelName,, • ]$INFO[Container(3540).ListItem.StartTime,, - ]$INFO[Container(3540).ListItem.EndTime,, • ]$INFO[Container(3540).ListItem.Genre]</value>
		</variable>
	<variable name="3550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3550">
		<value condition="String.Contains(Container(3550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3550).ListItem.label] $INFO[Container(3550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Title) + String.Contains(Container(3550).ListItem.FolderPath, pvr://)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Season) + !String.IsEmpty(Container(3550).ListItem.Episode) + !String.Contains(Container(3550).ListItem.TvShowTitle,Container(3550).ListItem.Title)">[UPPERCASE]S$INFO[Container(3550).ListItem.Season]E$INFO[Container(3550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Title)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Label)">$INFO[Container(3550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3550">
		<value condition="!String.IsEmpty(Container(3550).ListItem.TvShowTitle) + !String.IsEmpty(Container(3550).ListItem.Genre)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.TvShowTitle)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Premiered,, • ]$INFO[Container(3550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Year)">$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Duration,,min. • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Artist) + !String.IsEmpty(Container(3550).ListItem.Album)">$INFO[Container(3550).ListItem.Artist,, • ]$INFO[Container(3550).ListItem.Album,, • ]$INFO[Container(3550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Property(StartTime))">$INFO[Container(3550).ListItem.Property(ChannelName),, • ]$INFO[Container(3550).ListItem.Property(StartTime),, - ]$INFO[Container(3550).ListItem.Property(EndTime),, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.StartTime)">$INFO[Container(3550).ListItem.ChannelName,, • ]$INFO[Container(3550).ListItem.StartTime,, - ]$INFO[Container(3550).ListItem.EndTime,, • ]$INFO[Container(3550).ListItem.Genre]</value>
		</variable>
	<variable name="3560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3560">
		<value condition="String.Contains(Container(3560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3560).ListItem.label] $INFO[Container(3560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Title) + String.Contains(Container(3560).ListItem.FolderPath, pvr://)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Season) + !String.IsEmpty(Container(3560).ListItem.Episode) + !String.Contains(Container(3560).ListItem.TvShowTitle,Container(3560).ListItem.Title)">[UPPERCASE]S$INFO[Container(3560).ListItem.Season]E$INFO[Container(3560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Title)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Label)">$INFO[Container(3560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3560">
		<value condition="!String.IsEmpty(Container(3560).ListItem.TvShowTitle) + !String.IsEmpty(Container(3560).ListItem.Genre)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.TvShowTitle)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Premiered,, • ]$INFO[Container(3560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Year)">$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Duration,,min. • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Artist) + !String.IsEmpty(Container(3560).ListItem.Album)">$INFO[Container(3560).ListItem.Artist,, • ]$INFO[Container(3560).ListItem.Album,, • ]$INFO[Container(3560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Property(StartTime))">$INFO[Container(3560).ListItem.Property(ChannelName),, • ]$INFO[Container(3560).ListItem.Property(StartTime),, - ]$INFO[Container(3560).ListItem.Property(EndTime),, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.StartTime)">$INFO[Container(3560).ListItem.ChannelName,, • ]$INFO[Container(3560).ListItem.StartTime,, - ]$INFO[Container(3560).ListItem.EndTime,, • ]$INFO[Container(3560).ListItem.Genre]</value>
		</variable>
	<variable name="3570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3570">
		<value condition="String.Contains(Container(3570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3570).ListItem.label] $INFO[Container(3570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Title) + String.Contains(Container(3570).ListItem.FolderPath, pvr://)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Season) + !String.IsEmpty(Container(3570).ListItem.Episode) + !String.Contains(Container(3570).ListItem.TvShowTitle,Container(3570).ListItem.Title)">[UPPERCASE]S$INFO[Container(3570).ListItem.Season]E$INFO[Container(3570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Title)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Label)">$INFO[Container(3570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3570">
		<value condition="!String.IsEmpty(Container(3570).ListItem.TvShowTitle) + !String.IsEmpty(Container(3570).ListItem.Genre)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.TvShowTitle)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Premiered,, • ]$INFO[Container(3570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Year)">$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Duration,,min. • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Artist) + !String.IsEmpty(Container(3570).ListItem.Album)">$INFO[Container(3570).ListItem.Artist,, • ]$INFO[Container(3570).ListItem.Album,, • ]$INFO[Container(3570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Property(StartTime))">$INFO[Container(3570).ListItem.Property(ChannelName),, • ]$INFO[Container(3570).ListItem.Property(StartTime),, - ]$INFO[Container(3570).ListItem.Property(EndTime),, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.StartTime)">$INFO[Container(3570).ListItem.ChannelName,, • ]$INFO[Container(3570).ListItem.StartTime,, - ]$INFO[Container(3570).ListItem.EndTime,, • ]$INFO[Container(3570).ListItem.Genre]</value>
		</variable>
	<variable name="3580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3580">
		<value condition="String.Contains(Container(3580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3580).ListItem.label] $INFO[Container(3580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Title) + String.Contains(Container(3580).ListItem.FolderPath, pvr://)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Season) + !String.IsEmpty(Container(3580).ListItem.Episode) + !String.Contains(Container(3580).ListItem.TvShowTitle,Container(3580).ListItem.Title)">[UPPERCASE]S$INFO[Container(3580).ListItem.Season]E$INFO[Container(3580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Title)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Label)">$INFO[Container(3580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3580">
		<value condition="!String.IsEmpty(Container(3580).ListItem.TvShowTitle) + !String.IsEmpty(Container(3580).ListItem.Genre)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.TvShowTitle)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Premiered,, • ]$INFO[Container(3580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Year)">$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Duration,,min. • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Artist) + !String.IsEmpty(Container(3580).ListItem.Album)">$INFO[Container(3580).ListItem.Artist,, • ]$INFO[Container(3580).ListItem.Album,, • ]$INFO[Container(3580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Property(StartTime))">$INFO[Container(3580).ListItem.Property(ChannelName),, • ]$INFO[Container(3580).ListItem.Property(StartTime),, - ]$INFO[Container(3580).ListItem.Property(EndTime),, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.StartTime)">$INFO[Container(3580).ListItem.ChannelName,, • ]$INFO[Container(3580).ListItem.StartTime,, - ]$INFO[Container(3580).ListItem.EndTime,, • ]$INFO[Container(3580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-3">
		<value condition="Skin.String(widgetvalue-movies,7)" />
		<value condition="Skin.String(widgetvalue-movies,6)" />
		<value condition="Skin.String(widgetvalue-movies,5)" />
		<value condition="Skin.String(widgetvalue-movies,4)" />
		<value condition="Skin.String(widgetvalue-movies,3)" />
		<value condition="Skin.String(widgetvalue-movies,2)" />
		<value condition="Skin.String(widgetvalue-movies,1)">$LOCALIZE[20386]</value>
		<value>$ADDON[script.skin.helper.widgets 32029]</value>
		</variable>
	<variable name="4510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload-episodes)]</value>
		</variable>
	<variable name="widgetinfolabel-4510">
		<value condition="String.Contains(Container(4510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4510).ListItem.label] $INFO[Container(4510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Title) + String.Contains(Container(4510).ListItem.FolderPath, pvr://)">$INFO[Container(4510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Season) + !String.IsEmpty(Container(4510).ListItem.Episode) + !String.Contains(Container(4510).ListItem.TvShowTitle,Container(4510).ListItem.Title)">[UPPERCASE]S$INFO[Container(4510).ListItem.Season]E$INFO[Container(4510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Title)">$INFO[Container(4510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Label)">$INFO[Container(4510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-4510">
		<value condition="!String.IsEmpty(Container(4510).ListItem.TvShowTitle) + !String.IsEmpty(Container(4510).ListItem.Genre)">$INFO[Container(4510).ListItem.TvShowTitle,, • ]$INFO[Container(4510).ListItem.Year,, • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.TvShowTitle)">$INFO[Container(4510).ListItem.TvShowTitle,, • ]$INFO[Container(4510).ListItem.Premiered,, • ]$INFO[Container(4510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Year)">$INFO[Container(4510).ListItem.Year,, • ]$INFO[Container(4510).ListItem.Duration,,min. • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Artist) + !String.IsEmpty(Container(4510).ListItem.Album)">$INFO[Container(4510).ListItem.Artist,, • ]$INFO[Container(4510).ListItem.Album,, • ]$INFO[Container(4510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.Property(StartTime))">$INFO[Container(4510).ListItem.Property(ChannelName),, • ]$INFO[Container(4510).ListItem.Property(StartTime),, - ]$INFO[Container(4510).ListItem.Property(EndTime),, • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4510).ListItem.StartTime)">$INFO[Container(4510).ListItem.ChannelName,, • ]$INFO[Container(4510).ListItem.StartTime,, - ]$INFO[Container(4510).ListItem.EndTime,, • ]$INFO[Container(4510).ListItem.Genre]</value>
		</variable>
	<variable name="4520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=episodes&amp;reload=$INFO[Window(Home).Property(widgetreload-episodes)]</value>
		</variable>
	<variable name="widgetinfolabel-4520">
		<value condition="String.Contains(Container(4520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4520).ListItem.label] $INFO[Container(4520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Title) + String.Contains(Container(4520).ListItem.FolderPath, pvr://)">$INFO[Container(4520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Season) + !String.IsEmpty(Container(4520).ListItem.Episode) + !String.Contains(Container(4520).ListItem.TvShowTitle,Container(4520).ListItem.Title)">[UPPERCASE]S$INFO[Container(4520).ListItem.Season]E$INFO[Container(4520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Title)">$INFO[Container(4520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Label)">$INFO[Container(4520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-4520">
		<value condition="!String.IsEmpty(Container(4520).ListItem.TvShowTitle) + !String.IsEmpty(Container(4520).ListItem.Genre)">$INFO[Container(4520).ListItem.TvShowTitle,, • ]$INFO[Container(4520).ListItem.Year,, • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.TvShowTitle)">$INFO[Container(4520).ListItem.TvShowTitle,, • ]$INFO[Container(4520).ListItem.Premiered,, • ]$INFO[Container(4520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Year)">$INFO[Container(4520).ListItem.Year,, • ]$INFO[Container(4520).ListItem.Duration,,min. • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Artist) + !String.IsEmpty(Container(4520).ListItem.Album)">$INFO[Container(4520).ListItem.Artist,, • ]$INFO[Container(4520).ListItem.Album,, • ]$INFO[Container(4520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.Property(StartTime))">$INFO[Container(4520).ListItem.Property(ChannelName),, • ]$INFO[Container(4520).ListItem.Property(StartTime),, - ]$INFO[Container(4520).ListItem.Property(EndTime),, • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4520).ListItem.StartTime)">$INFO[Container(4520).ListItem.ChannelName,, • ]$INFO[Container(4520).ListItem.StartTime,, - ]$INFO[Container(4520).ListItem.EndTime,, • ]$INFO[Container(4520).ListItem.Genre]</value>
		</variable>
	<variable name="4530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-4530">
		<value condition="String.Contains(Container(4530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4530).ListItem.label] $INFO[Container(4530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Title) + String.Contains(Container(4530).ListItem.FolderPath, pvr://)">$INFO[Container(4530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Season) + !String.IsEmpty(Container(4530).ListItem.Episode) + !String.Contains(Container(4530).ListItem.TvShowTitle,Container(4530).ListItem.Title)">[UPPERCASE]S$INFO[Container(4530).ListItem.Season]E$INFO[Container(4530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Title)">$INFO[Container(4530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Label)">$INFO[Container(4530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-4530">
		<value condition="!String.IsEmpty(Container(4530).ListItem.TvShowTitle) + !String.IsEmpty(Container(4530).ListItem.Genre)">$INFO[Container(4530).ListItem.TvShowTitle,, • ]$INFO[Container(4530).ListItem.Year,, • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.TvShowTitle)">$INFO[Container(4530).ListItem.TvShowTitle,, • ]$INFO[Container(4530).ListItem.Premiered,, • ]$INFO[Container(4530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Year)">$INFO[Container(4530).ListItem.Year,, • ]$INFO[Container(4530).ListItem.Duration,,min. • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Artist) + !String.IsEmpty(Container(4530).ListItem.Album)">$INFO[Container(4530).ListItem.Artist,, • ]$INFO[Container(4530).ListItem.Album,, • ]$INFO[Container(4530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.Property(StartTime))">$INFO[Container(4530).ListItem.Property(ChannelName),, • ]$INFO[Container(4530).ListItem.Property(StartTime),, - ]$INFO[Container(4530).ListItem.Property(EndTime),, • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4530).ListItem.StartTime)">$INFO[Container(4530).ListItem.ChannelName,, • ]$INFO[Container(4530).ListItem.StartTime,, - ]$INFO[Container(4530).ListItem.EndTime,, • ]$INFO[Container(4530).ListItem.Genre]</value>
		</variable>
	<variable name="4540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-4540">
		<value condition="String.Contains(Container(4540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4540).ListItem.label] $INFO[Container(4540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Title) + String.Contains(Container(4540).ListItem.FolderPath, pvr://)">$INFO[Container(4540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Season) + !String.IsEmpty(Container(4540).ListItem.Episode) + !String.Contains(Container(4540).ListItem.TvShowTitle,Container(4540).ListItem.Title)">[UPPERCASE]S$INFO[Container(4540).ListItem.Season]E$INFO[Container(4540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Title)">$INFO[Container(4540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Label)">$INFO[Container(4540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-4540">
		<value condition="!String.IsEmpty(Container(4540).ListItem.TvShowTitle) + !String.IsEmpty(Container(4540).ListItem.Genre)">$INFO[Container(4540).ListItem.TvShowTitle,, • ]$INFO[Container(4540).ListItem.Year,, • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.TvShowTitle)">$INFO[Container(4540).ListItem.TvShowTitle,, • ]$INFO[Container(4540).ListItem.Premiered,, • ]$INFO[Container(4540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Year)">$INFO[Container(4540).ListItem.Year,, • ]$INFO[Container(4540).ListItem.Duration,,min. • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Artist) + !String.IsEmpty(Container(4540).ListItem.Album)">$INFO[Container(4540).ListItem.Artist,, • ]$INFO[Container(4540).ListItem.Album,, • ]$INFO[Container(4540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.Property(StartTime))">$INFO[Container(4540).ListItem.Property(ChannelName),, • ]$INFO[Container(4540).ListItem.Property(StartTime),, - ]$INFO[Container(4540).ListItem.Property(EndTime),, • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4540).ListItem.StartTime)">$INFO[Container(4540).ListItem.ChannelName,, • ]$INFO[Container(4540).ListItem.StartTime,, - ]$INFO[Container(4540).ListItem.EndTime,, • ]$INFO[Container(4540).ListItem.Genre]</value>
		</variable>
	<variable name="4550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-4550">
		<value condition="String.Contains(Container(4550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4550).ListItem.label] $INFO[Container(4550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Title) + String.Contains(Container(4550).ListItem.FolderPath, pvr://)">$INFO[Container(4550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Season) + !String.IsEmpty(Container(4550).ListItem.Episode) + !String.Contains(Container(4550).ListItem.TvShowTitle,Container(4550).ListItem.Title)">[UPPERCASE]S$INFO[Container(4550).ListItem.Season]E$INFO[Container(4550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Title)">$INFO[Container(4550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Label)">$INFO[Container(4550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-4550">
		<value condition="!String.IsEmpty(Container(4550).ListItem.TvShowTitle) + !String.IsEmpty(Container(4550).ListItem.Genre)">$INFO[Container(4550).ListItem.TvShowTitle,, • ]$INFO[Container(4550).ListItem.Year,, • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.TvShowTitle)">$INFO[Container(4550).ListItem.TvShowTitle,, • ]$INFO[Container(4550).ListItem.Premiered,, • ]$INFO[Container(4550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Year)">$INFO[Container(4550).ListItem.Year,, • ]$INFO[Container(4550).ListItem.Duration,,min. • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Artist) + !String.IsEmpty(Container(4550).ListItem.Album)">$INFO[Container(4550).ListItem.Artist,, • ]$INFO[Container(4550).ListItem.Album,, • ]$INFO[Container(4550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.Property(StartTime))">$INFO[Container(4550).ListItem.Property(ChannelName),, • ]$INFO[Container(4550).ListItem.Property(StartTime),, - ]$INFO[Container(4550).ListItem.Property(EndTime),, • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4550).ListItem.StartTime)">$INFO[Container(4550).ListItem.ChannelName,, • ]$INFO[Container(4550).ListItem.StartTime,, - ]$INFO[Container(4550).ListItem.EndTime,, • ]$INFO[Container(4550).ListItem.Genre]</value>
		</variable>
	<variable name="4560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-4560">
		<value condition="String.Contains(Container(4560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4560).ListItem.label] $INFO[Container(4560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Title) + String.Contains(Container(4560).ListItem.FolderPath, pvr://)">$INFO[Container(4560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Season) + !String.IsEmpty(Container(4560).ListItem.Episode) + !String.Contains(Container(4560).ListItem.TvShowTitle,Container(4560).ListItem.Title)">[UPPERCASE]S$INFO[Container(4560).ListItem.Season]E$INFO[Container(4560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Title)">$INFO[Container(4560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Label)">$INFO[Container(4560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-4560">
		<value condition="!String.IsEmpty(Container(4560).ListItem.TvShowTitle) + !String.IsEmpty(Container(4560).ListItem.Genre)">$INFO[Container(4560).ListItem.TvShowTitle,, • ]$INFO[Container(4560).ListItem.Year,, • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.TvShowTitle)">$INFO[Container(4560).ListItem.TvShowTitle,, • ]$INFO[Container(4560).ListItem.Premiered,, • ]$INFO[Container(4560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Year)">$INFO[Container(4560).ListItem.Year,, • ]$INFO[Container(4560).ListItem.Duration,,min. • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Artist) + !String.IsEmpty(Container(4560).ListItem.Album)">$INFO[Container(4560).ListItem.Artist,, • ]$INFO[Container(4560).ListItem.Album,, • ]$INFO[Container(4560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.Property(StartTime))">$INFO[Container(4560).ListItem.Property(ChannelName),, • ]$INFO[Container(4560).ListItem.Property(StartTime),, - ]$INFO[Container(4560).ListItem.Property(EndTime),, • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4560).ListItem.StartTime)">$INFO[Container(4560).ListItem.ChannelName,, • ]$INFO[Container(4560).ListItem.StartTime,, - ]$INFO[Container(4560).ListItem.EndTime,, • ]$INFO[Container(4560).ListItem.Genre]</value>
		</variable>
	<variable name="4570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-4570">
		<value condition="String.Contains(Container(4570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4570).ListItem.label] $INFO[Container(4570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Title) + String.Contains(Container(4570).ListItem.FolderPath, pvr://)">$INFO[Container(4570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Season) + !String.IsEmpty(Container(4570).ListItem.Episode) + !String.Contains(Container(4570).ListItem.TvShowTitle,Container(4570).ListItem.Title)">[UPPERCASE]S$INFO[Container(4570).ListItem.Season]E$INFO[Container(4570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Title)">$INFO[Container(4570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Label)">$INFO[Container(4570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-4570">
		<value condition="!String.IsEmpty(Container(4570).ListItem.TvShowTitle) + !String.IsEmpty(Container(4570).ListItem.Genre)">$INFO[Container(4570).ListItem.TvShowTitle,, • ]$INFO[Container(4570).ListItem.Year,, • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.TvShowTitle)">$INFO[Container(4570).ListItem.TvShowTitle,, • ]$INFO[Container(4570).ListItem.Premiered,, • ]$INFO[Container(4570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Year)">$INFO[Container(4570).ListItem.Year,, • ]$INFO[Container(4570).ListItem.Duration,,min. • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Artist) + !String.IsEmpty(Container(4570).ListItem.Album)">$INFO[Container(4570).ListItem.Artist,, • ]$INFO[Container(4570).ListItem.Album,, • ]$INFO[Container(4570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.Property(StartTime))">$INFO[Container(4570).ListItem.Property(ChannelName),, • ]$INFO[Container(4570).ListItem.Property(StartTime),, - ]$INFO[Container(4570).ListItem.Property(EndTime),, • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4570).ListItem.StartTime)">$INFO[Container(4570).ListItem.ChannelName,, • ]$INFO[Container(4570).ListItem.StartTime,, - ]$INFO[Container(4570).ListItem.EndTime,, • ]$INFO[Container(4570).ListItem.Genre]</value>
		</variable>
	<variable name="4580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-4580">
		<value condition="String.Contains(Container(4580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4580).ListItem.label] $INFO[Container(4580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Title) + String.Contains(Container(4580).ListItem.FolderPath, pvr://)">$INFO[Container(4580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Season) + !String.IsEmpty(Container(4580).ListItem.Episode) + !String.Contains(Container(4580).ListItem.TvShowTitle,Container(4580).ListItem.Title)">[UPPERCASE]S$INFO[Container(4580).ListItem.Season]E$INFO[Container(4580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Title)">$INFO[Container(4580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Label)">$INFO[Container(4580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-4580">
		<value condition="!String.IsEmpty(Container(4580).ListItem.TvShowTitle) + !String.IsEmpty(Container(4580).ListItem.Genre)">$INFO[Container(4580).ListItem.TvShowTitle,, • ]$INFO[Container(4580).ListItem.Year,, • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.TvShowTitle)">$INFO[Container(4580).ListItem.TvShowTitle,, • ]$INFO[Container(4580).ListItem.Premiered,, • ]$INFO[Container(4580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Year)">$INFO[Container(4580).ListItem.Year,, • ]$INFO[Container(4580).ListItem.Duration,,min. • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Artist) + !String.IsEmpty(Container(4580).ListItem.Album)">$INFO[Container(4580).ListItem.Artist,, • ]$INFO[Container(4580).ListItem.Album,, • ]$INFO[Container(4580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.Property(StartTime))">$INFO[Container(4580).ListItem.Property(ChannelName),, • ]$INFO[Container(4580).ListItem.Property(StartTime),, - ]$INFO[Container(4580).ListItem.Property(EndTime),, • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(4580).ListItem.StartTime)">$INFO[Container(4580).ListItem.ChannelName,, • ]$INFO[Container(4580).ListItem.StartTime,, - ]$INFO[Container(4580).ListItem.EndTime,, • ]$INFO[Container(4580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-4">
		<value condition="Skin.String(widgetvalue-tvshows,7)" />
		<value condition="Skin.String(widgetvalue-tvshows,6)" />
		<value condition="Skin.String(widgetvalue-tvshows,5)" />
		<value condition="Skin.String(widgetvalue-tvshows,4)" />
		<value condition="Skin.String(widgetvalue-tvshows,3)" />
		<value condition="Skin.String(widgetvalue-tvshows,2)" />
		<value condition="Skin.String(widgetvalue-tvshows,1)">$LOCALIZE[20387]</value>
		<value>$ADDON[script.skin.helper.widgets 32002]</value>
		</variable>
	<variable name="5510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=albums&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]</value>
		</variable>
	<variable name="widgetinfolabel-5510">
		<value condition="String.Contains(Container(5510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5510).ListItem.label] $INFO[Container(5510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Title) + String.Contains(Container(5510).ListItem.FolderPath, pvr://)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Season) + !String.IsEmpty(Container(5510).ListItem.Episode) + !String.Contains(Container(5510).ListItem.TvShowTitle,Container(5510).ListItem.Title)">[UPPERCASE]S$INFO[Container(5510).ListItem.Season]E$INFO[Container(5510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Title)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Label)">$INFO[Container(5510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5510">
		<value condition="!String.IsEmpty(Container(5510).ListItem.TvShowTitle) + !String.IsEmpty(Container(5510).ListItem.Genre)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.TvShowTitle)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Premiered,, • ]$INFO[Container(5510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Year)">$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Duration,,min. • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Artist) + !String.IsEmpty(Container(5510).ListItem.Album)">$INFO[Container(5510).ListItem.Artist,, • ]$INFO[Container(5510).ListItem.Album,, • ]$INFO[Container(5510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Property(StartTime))">$INFO[Container(5510).ListItem.Property(ChannelName),, • ]$INFO[Container(5510).ListItem.Property(StartTime),, - ]$INFO[Container(5510).ListItem.Property(EndTime),, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.StartTime)">$INFO[Container(5510).ListItem.ChannelName,, • ]$INFO[Container(5510).ListItem.StartTime,, - ]$INFO[Container(5510).ListItem.EndTime,, • ]$INFO[Container(5510).ListItem.Genre]</value>
		</variable>
	<variable name="5520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=songs&amp;limit=25&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]</value>
		</variable>
	<variable name="widgetinfolabel-5520">
		<value condition="String.Contains(Container(5520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5520).ListItem.label] $INFO[Container(5520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Title) + String.Contains(Container(5520).ListItem.FolderPath, pvr://)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Season) + !String.IsEmpty(Container(5520).ListItem.Episode) + !String.Contains(Container(5520).ListItem.TvShowTitle,Container(5520).ListItem.Title)">[UPPERCASE]S$INFO[Container(5520).ListItem.Season]E$INFO[Container(5520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Title)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Label)">$INFO[Container(5520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5520">
		<value condition="!String.IsEmpty(Container(5520).ListItem.TvShowTitle) + !String.IsEmpty(Container(5520).ListItem.Genre)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.TvShowTitle)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Premiered,, • ]$INFO[Container(5520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Year)">$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Duration,,min. • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Artist) + !String.IsEmpty(Container(5520).ListItem.Album)">$INFO[Container(5520).ListItem.Artist,, • ]$INFO[Container(5520).ListItem.Album,, • ]$INFO[Container(5520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Property(StartTime))">$INFO[Container(5520).ListItem.Property(ChannelName),, • ]$INFO[Container(5520).ListItem.Property(StartTime),, - ]$INFO[Container(5520).ListItem.Property(EndTime),, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.StartTime)">$INFO[Container(5520).ListItem.ChannelName,, • ]$INFO[Container(5520).ListItem.StartTime,, - ]$INFO[Container(5520).ListItem.EndTime,, • ]$INFO[Container(5520).ListItem.Genre]</value>
		</variable>
	<variable name="5530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5530">
		<value condition="String.Contains(Container(5530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5530).ListItem.label] $INFO[Container(5530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Title) + String.Contains(Container(5530).ListItem.FolderPath, pvr://)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Season) + !String.IsEmpty(Container(5530).ListItem.Episode) + !String.Contains(Container(5530).ListItem.TvShowTitle,Container(5530).ListItem.Title)">[UPPERCASE]S$INFO[Container(5530).ListItem.Season]E$INFO[Container(5530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Title)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Label)">$INFO[Container(5530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5530">
		<value condition="!String.IsEmpty(Container(5530).ListItem.TvShowTitle) + !String.IsEmpty(Container(5530).ListItem.Genre)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.TvShowTitle)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Premiered,, • ]$INFO[Container(5530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Year)">$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Duration,,min. • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Artist) + !String.IsEmpty(Container(5530).ListItem.Album)">$INFO[Container(5530).ListItem.Artist,, • ]$INFO[Container(5530).ListItem.Album,, • ]$INFO[Container(5530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Property(StartTime))">$INFO[Container(5530).ListItem.Property(ChannelName),, • ]$INFO[Container(5530).ListItem.Property(StartTime),, - ]$INFO[Container(5530).ListItem.Property(EndTime),, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.StartTime)">$INFO[Container(5530).ListItem.ChannelName,, • ]$INFO[Container(5530).ListItem.StartTime,, - ]$INFO[Container(5530).ListItem.EndTime,, • ]$INFO[Container(5530).ListItem.Genre]</value>
		</variable>
	<variable name="5540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5540">
		<value condition="String.Contains(Container(5540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5540).ListItem.label] $INFO[Container(5540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Title) + String.Contains(Container(5540).ListItem.FolderPath, pvr://)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Season) + !String.IsEmpty(Container(5540).ListItem.Episode) + !String.Contains(Container(5540).ListItem.TvShowTitle,Container(5540).ListItem.Title)">[UPPERCASE]S$INFO[Container(5540).ListItem.Season]E$INFO[Container(5540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Title)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Label)">$INFO[Container(5540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5540">
		<value condition="!String.IsEmpty(Container(5540).ListItem.TvShowTitle) + !String.IsEmpty(Container(5540).ListItem.Genre)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.TvShowTitle)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Premiered,, • ]$INFO[Container(5540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Year)">$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Duration,,min. • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Artist) + !String.IsEmpty(Container(5540).ListItem.Album)">$INFO[Container(5540).ListItem.Artist,, • ]$INFO[Container(5540).ListItem.Album,, • ]$INFO[Container(5540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Property(StartTime))">$INFO[Container(5540).ListItem.Property(ChannelName),, • ]$INFO[Container(5540).ListItem.Property(StartTime),, - ]$INFO[Container(5540).ListItem.Property(EndTime),, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.StartTime)">$INFO[Container(5540).ListItem.ChannelName,, • ]$INFO[Container(5540).ListItem.StartTime,, - ]$INFO[Container(5540).ListItem.EndTime,, • ]$INFO[Container(5540).ListItem.Genre]</value>
		</variable>
	<variable name="5550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5550">
		<value condition="String.Contains(Container(5550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5550).ListItem.label] $INFO[Container(5550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Title) + String.Contains(Container(5550).ListItem.FolderPath, pvr://)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Season) + !String.IsEmpty(Container(5550).ListItem.Episode) + !String.Contains(Container(5550).ListItem.TvShowTitle,Container(5550).ListItem.Title)">[UPPERCASE]S$INFO[Container(5550).ListItem.Season]E$INFO[Container(5550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Title)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Label)">$INFO[Container(5550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5550">
		<value condition="!String.IsEmpty(Container(5550).ListItem.TvShowTitle) + !String.IsEmpty(Container(5550).ListItem.Genre)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.TvShowTitle)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Premiered,, • ]$INFO[Container(5550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Year)">$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Duration,,min. • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Artist) + !String.IsEmpty(Container(5550).ListItem.Album)">$INFO[Container(5550).ListItem.Artist,, • ]$INFO[Container(5550).ListItem.Album,, • ]$INFO[Container(5550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Property(StartTime))">$INFO[Container(5550).ListItem.Property(ChannelName),, • ]$INFO[Container(5550).ListItem.Property(StartTime),, - ]$INFO[Container(5550).ListItem.Property(EndTime),, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.StartTime)">$INFO[Container(5550).ListItem.ChannelName,, • ]$INFO[Container(5550).ListItem.StartTime,, - ]$INFO[Container(5550).ListItem.EndTime,, • ]$INFO[Container(5550).ListItem.Genre]</value>
		</variable>
	<variable name="5560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5560">
		<value condition="String.Contains(Container(5560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5560).ListItem.label] $INFO[Container(5560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Title) + String.Contains(Container(5560).ListItem.FolderPath, pvr://)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Season) + !String.IsEmpty(Container(5560).ListItem.Episode) + !String.Contains(Container(5560).ListItem.TvShowTitle,Container(5560).ListItem.Title)">[UPPERCASE]S$INFO[Container(5560).ListItem.Season]E$INFO[Container(5560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Title)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Label)">$INFO[Container(5560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5560">
		<value condition="!String.IsEmpty(Container(5560).ListItem.TvShowTitle) + !String.IsEmpty(Container(5560).ListItem.Genre)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.TvShowTitle)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Premiered,, • ]$INFO[Container(5560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Year)">$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Duration,,min. • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Artist) + !String.IsEmpty(Container(5560).ListItem.Album)">$INFO[Container(5560).ListItem.Artist,, • ]$INFO[Container(5560).ListItem.Album,, • ]$INFO[Container(5560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Property(StartTime))">$INFO[Container(5560).ListItem.Property(ChannelName),, • ]$INFO[Container(5560).ListItem.Property(StartTime),, - ]$INFO[Container(5560).ListItem.Property(EndTime),, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.StartTime)">$INFO[Container(5560).ListItem.ChannelName,, • ]$INFO[Container(5560).ListItem.StartTime,, - ]$INFO[Container(5560).ListItem.EndTime,, • ]$INFO[Container(5560).ListItem.Genre]</value>
		</variable>
	<variable name="5570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5570">
		<value condition="String.Contains(Container(5570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5570).ListItem.label] $INFO[Container(5570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Title) + String.Contains(Container(5570).ListItem.FolderPath, pvr://)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Season) + !String.IsEmpty(Container(5570).ListItem.Episode) + !String.Contains(Container(5570).ListItem.TvShowTitle,Container(5570).ListItem.Title)">[UPPERCASE]S$INFO[Container(5570).ListItem.Season]E$INFO[Container(5570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Title)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Label)">$INFO[Container(5570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5570">
		<value condition="!String.IsEmpty(Container(5570).ListItem.TvShowTitle) + !String.IsEmpty(Container(5570).ListItem.Genre)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.TvShowTitle)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Premiered,, • ]$INFO[Container(5570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Year)">$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Duration,,min. • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Artist) + !String.IsEmpty(Container(5570).ListItem.Album)">$INFO[Container(5570).ListItem.Artist,, • ]$INFO[Container(5570).ListItem.Album,, • ]$INFO[Container(5570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Property(StartTime))">$INFO[Container(5570).ListItem.Property(ChannelName),, • ]$INFO[Container(5570).ListItem.Property(StartTime),, - ]$INFO[Container(5570).ListItem.Property(EndTime),, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.StartTime)">$INFO[Container(5570).ListItem.ChannelName,, • ]$INFO[Container(5570).ListItem.StartTime,, - ]$INFO[Container(5570).ListItem.EndTime,, • ]$INFO[Container(5570).ListItem.Genre]</value>
		</variable>
	<variable name="5580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5580">
		<value condition="String.Contains(Container(5580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5580).ListItem.label] $INFO[Container(5580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Title) + String.Contains(Container(5580).ListItem.FolderPath, pvr://)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Season) + !String.IsEmpty(Container(5580).ListItem.Episode) + !String.Contains(Container(5580).ListItem.TvShowTitle,Container(5580).ListItem.Title)">[UPPERCASE]S$INFO[Container(5580).ListItem.Season]E$INFO[Container(5580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Title)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Label)">$INFO[Container(5580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5580">
		<value condition="!String.IsEmpty(Container(5580).ListItem.TvShowTitle) + !String.IsEmpty(Container(5580).ListItem.Genre)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.TvShowTitle)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Premiered,, • ]$INFO[Container(5580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Year)">$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Duration,,min. • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Artist) + !String.IsEmpty(Container(5580).ListItem.Album)">$INFO[Container(5580).ListItem.Artist,, • ]$INFO[Container(5580).ListItem.Album,, • ]$INFO[Container(5580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Property(StartTime))">$INFO[Container(5580).ListItem.Property(ChannelName),, • ]$INFO[Container(5580).ListItem.Property(StartTime),, - ]$INFO[Container(5580).ListItem.Property(EndTime),, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.StartTime)">$INFO[Container(5580).ListItem.ChannelName,, • ]$INFO[Container(5580).ListItem.StartTime,, - ]$INFO[Container(5580).ListItem.EndTime,, • ]$INFO[Container(5580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-5">
		<value condition="Skin.String(widgetvalue-num-10005,7)" />
		<value condition="Skin.String(widgetvalue-num-10005,6)" />
		<value condition="Skin.String(widgetvalue-num-10005,5)" />
		<value condition="Skin.String(widgetvalue-num-10005,4)" />
		<value condition="Skin.String(widgetvalue-num-10005,3)" />
		<value condition="Skin.String(widgetvalue-num-10005,2)" />
		<value condition="Skin.String(widgetvalue-num-10005,1)">$ADDON[script.skin.helper.widgets 32012]</value>
		<value>$LOCALIZE[359]</value>
		</variable>
	<variable name="6510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=musicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload-musicvideos)]</value>
		</variable>
	<variable name="widgetinfolabel-6510">
		<value condition="String.Contains(Container(6510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6510).ListItem.label] $INFO[Container(6510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Title) + String.Contains(Container(6510).ListItem.FolderPath, pvr://)">$INFO[Container(6510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Season) + !String.IsEmpty(Container(6510).ListItem.Episode) + !String.Contains(Container(6510).ListItem.TvShowTitle,Container(6510).ListItem.Title)">[UPPERCASE]S$INFO[Container(6510).ListItem.Season]E$INFO[Container(6510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Title)">$INFO[Container(6510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Label)">$INFO[Container(6510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-6510">
		<value condition="!String.IsEmpty(Container(6510).ListItem.TvShowTitle) + !String.IsEmpty(Container(6510).ListItem.Genre)">$INFO[Container(6510).ListItem.TvShowTitle,, • ]$INFO[Container(6510).ListItem.Year,, • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.TvShowTitle)">$INFO[Container(6510).ListItem.TvShowTitle,, • ]$INFO[Container(6510).ListItem.Premiered,, • ]$INFO[Container(6510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Year)">$INFO[Container(6510).ListItem.Year,, • ]$INFO[Container(6510).ListItem.Duration,,min. • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Artist) + !String.IsEmpty(Container(6510).ListItem.Album)">$INFO[Container(6510).ListItem.Artist,, • ]$INFO[Container(6510).ListItem.Album,, • ]$INFO[Container(6510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.Property(StartTime))">$INFO[Container(6510).ListItem.Property(ChannelName),, • ]$INFO[Container(6510).ListItem.Property(StartTime),, - ]$INFO[Container(6510).ListItem.Property(EndTime),, • ]$INFO[Container(6510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6510).ListItem.StartTime)">$INFO[Container(6510).ListItem.ChannelName,, • ]$INFO[Container(6510).ListItem.StartTime,, - ]$INFO[Container(6510).ListItem.EndTime,, • ]$INFO[Container(6510).ListItem.Genre]</value>
		</variable>
	<variable name="6520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-6520">
		<value condition="String.Contains(Container(6520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6520).ListItem.label] $INFO[Container(6520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Title) + String.Contains(Container(6520).ListItem.FolderPath, pvr://)">$INFO[Container(6520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Season) + !String.IsEmpty(Container(6520).ListItem.Episode) + !String.Contains(Container(6520).ListItem.TvShowTitle,Container(6520).ListItem.Title)">[UPPERCASE]S$INFO[Container(6520).ListItem.Season]E$INFO[Container(6520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Title)">$INFO[Container(6520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Label)">$INFO[Container(6520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-6520">
		<value condition="!String.IsEmpty(Container(6520).ListItem.TvShowTitle) + !String.IsEmpty(Container(6520).ListItem.Genre)">$INFO[Container(6520).ListItem.TvShowTitle,, • ]$INFO[Container(6520).ListItem.Year,, • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.TvShowTitle)">$INFO[Container(6520).ListItem.TvShowTitle,, • ]$INFO[Container(6520).ListItem.Premiered,, • ]$INFO[Container(6520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Year)">$INFO[Container(6520).ListItem.Year,, • ]$INFO[Container(6520).ListItem.Duration,,min. • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Artist) + !String.IsEmpty(Container(6520).ListItem.Album)">$INFO[Container(6520).ListItem.Artist,, • ]$INFO[Container(6520).ListItem.Album,, • ]$INFO[Container(6520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.Property(StartTime))">$INFO[Container(6520).ListItem.Property(ChannelName),, • ]$INFO[Container(6520).ListItem.Property(StartTime),, - ]$INFO[Container(6520).ListItem.Property(EndTime),, • ]$INFO[Container(6520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6520).ListItem.StartTime)">$INFO[Container(6520).ListItem.ChannelName,, • ]$INFO[Container(6520).ListItem.StartTime,, - ]$INFO[Container(6520).ListItem.EndTime,, • ]$INFO[Container(6520).ListItem.Genre]</value>
		</variable>
	<variable name="6530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-6530">
		<value condition="String.Contains(Container(6530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6530).ListItem.label] $INFO[Container(6530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Title) + String.Contains(Container(6530).ListItem.FolderPath, pvr://)">$INFO[Container(6530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Season) + !String.IsEmpty(Container(6530).ListItem.Episode) + !String.Contains(Container(6530).ListItem.TvShowTitle,Container(6530).ListItem.Title)">[UPPERCASE]S$INFO[Container(6530).ListItem.Season]E$INFO[Container(6530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Title)">$INFO[Container(6530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Label)">$INFO[Container(6530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-6530">
		<value condition="!String.IsEmpty(Container(6530).ListItem.TvShowTitle) + !String.IsEmpty(Container(6530).ListItem.Genre)">$INFO[Container(6530).ListItem.TvShowTitle,, • ]$INFO[Container(6530).ListItem.Year,, • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.TvShowTitle)">$INFO[Container(6530).ListItem.TvShowTitle,, • ]$INFO[Container(6530).ListItem.Premiered,, • ]$INFO[Container(6530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Year)">$INFO[Container(6530).ListItem.Year,, • ]$INFO[Container(6530).ListItem.Duration,,min. • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Artist) + !String.IsEmpty(Container(6530).ListItem.Album)">$INFO[Container(6530).ListItem.Artist,, • ]$INFO[Container(6530).ListItem.Album,, • ]$INFO[Container(6530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.Property(StartTime))">$INFO[Container(6530).ListItem.Property(ChannelName),, • ]$INFO[Container(6530).ListItem.Property(StartTime),, - ]$INFO[Container(6530).ListItem.Property(EndTime),, • ]$INFO[Container(6530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6530).ListItem.StartTime)">$INFO[Container(6530).ListItem.ChannelName,, • ]$INFO[Container(6530).ListItem.StartTime,, - ]$INFO[Container(6530).ListItem.EndTime,, • ]$INFO[Container(6530).ListItem.Genre]</value>
		</variable>
	<variable name="6540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-6540">
		<value condition="String.Contains(Container(6540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6540).ListItem.label] $INFO[Container(6540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Title) + String.Contains(Container(6540).ListItem.FolderPath, pvr://)">$INFO[Container(6540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Season) + !String.IsEmpty(Container(6540).ListItem.Episode) + !String.Contains(Container(6540).ListItem.TvShowTitle,Container(6540).ListItem.Title)">[UPPERCASE]S$INFO[Container(6540).ListItem.Season]E$INFO[Container(6540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Title)">$INFO[Container(6540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Label)">$INFO[Container(6540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-6540">
		<value condition="!String.IsEmpty(Container(6540).ListItem.TvShowTitle) + !String.IsEmpty(Container(6540).ListItem.Genre)">$INFO[Container(6540).ListItem.TvShowTitle,, • ]$INFO[Container(6540).ListItem.Year,, • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.TvShowTitle)">$INFO[Container(6540).ListItem.TvShowTitle,, • ]$INFO[Container(6540).ListItem.Premiered,, • ]$INFO[Container(6540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Year)">$INFO[Container(6540).ListItem.Year,, • ]$INFO[Container(6540).ListItem.Duration,,min. • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Artist) + !String.IsEmpty(Container(6540).ListItem.Album)">$INFO[Container(6540).ListItem.Artist,, • ]$INFO[Container(6540).ListItem.Album,, • ]$INFO[Container(6540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.Property(StartTime))">$INFO[Container(6540).ListItem.Property(ChannelName),, • ]$INFO[Container(6540).ListItem.Property(StartTime),, - ]$INFO[Container(6540).ListItem.Property(EndTime),, • ]$INFO[Container(6540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6540).ListItem.StartTime)">$INFO[Container(6540).ListItem.ChannelName,, • ]$INFO[Container(6540).ListItem.StartTime,, - ]$INFO[Container(6540).ListItem.EndTime,, • ]$INFO[Container(6540).ListItem.Genre]</value>
		</variable>
	<variable name="6550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-6550">
		<value condition="String.Contains(Container(6550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6550).ListItem.label] $INFO[Container(6550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Title) + String.Contains(Container(6550).ListItem.FolderPath, pvr://)">$INFO[Container(6550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Season) + !String.IsEmpty(Container(6550).ListItem.Episode) + !String.Contains(Container(6550).ListItem.TvShowTitle,Container(6550).ListItem.Title)">[UPPERCASE]S$INFO[Container(6550).ListItem.Season]E$INFO[Container(6550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Title)">$INFO[Container(6550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Label)">$INFO[Container(6550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-6550">
		<value condition="!String.IsEmpty(Container(6550).ListItem.TvShowTitle) + !String.IsEmpty(Container(6550).ListItem.Genre)">$INFO[Container(6550).ListItem.TvShowTitle,, • ]$INFO[Container(6550).ListItem.Year,, • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.TvShowTitle)">$INFO[Container(6550).ListItem.TvShowTitle,, • ]$INFO[Container(6550).ListItem.Premiered,, • ]$INFO[Container(6550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Year)">$INFO[Container(6550).ListItem.Year,, • ]$INFO[Container(6550).ListItem.Duration,,min. • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Artist) + !String.IsEmpty(Container(6550).ListItem.Album)">$INFO[Container(6550).ListItem.Artist,, • ]$INFO[Container(6550).ListItem.Album,, • ]$INFO[Container(6550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.Property(StartTime))">$INFO[Container(6550).ListItem.Property(ChannelName),, • ]$INFO[Container(6550).ListItem.Property(StartTime),, - ]$INFO[Container(6550).ListItem.Property(EndTime),, • ]$INFO[Container(6550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6550).ListItem.StartTime)">$INFO[Container(6550).ListItem.ChannelName,, • ]$INFO[Container(6550).ListItem.StartTime,, - ]$INFO[Container(6550).ListItem.EndTime,, • ]$INFO[Container(6550).ListItem.Genre]</value>
		</variable>
	<variable name="6560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-6560">
		<value condition="String.Contains(Container(6560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6560).ListItem.label] $INFO[Container(6560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Title) + String.Contains(Container(6560).ListItem.FolderPath, pvr://)">$INFO[Container(6560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Season) + !String.IsEmpty(Container(6560).ListItem.Episode) + !String.Contains(Container(6560).ListItem.TvShowTitle,Container(6560).ListItem.Title)">[UPPERCASE]S$INFO[Container(6560).ListItem.Season]E$INFO[Container(6560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Title)">$INFO[Container(6560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Label)">$INFO[Container(6560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-6560">
		<value condition="!String.IsEmpty(Container(6560).ListItem.TvShowTitle) + !String.IsEmpty(Container(6560).ListItem.Genre)">$INFO[Container(6560).ListItem.TvShowTitle,, • ]$INFO[Container(6560).ListItem.Year,, • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.TvShowTitle)">$INFO[Container(6560).ListItem.TvShowTitle,, • ]$INFO[Container(6560).ListItem.Premiered,, • ]$INFO[Container(6560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Year)">$INFO[Container(6560).ListItem.Year,, • ]$INFO[Container(6560).ListItem.Duration,,min. • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Artist) + !String.IsEmpty(Container(6560).ListItem.Album)">$INFO[Container(6560).ListItem.Artist,, • ]$INFO[Container(6560).ListItem.Album,, • ]$INFO[Container(6560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.Property(StartTime))">$INFO[Container(6560).ListItem.Property(ChannelName),, • ]$INFO[Container(6560).ListItem.Property(StartTime),, - ]$INFO[Container(6560).ListItem.Property(EndTime),, • ]$INFO[Container(6560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6560).ListItem.StartTime)">$INFO[Container(6560).ListItem.ChannelName,, • ]$INFO[Container(6560).ListItem.StartTime,, - ]$INFO[Container(6560).ListItem.EndTime,, • ]$INFO[Container(6560).ListItem.Genre]</value>
		</variable>
	<variable name="6570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-6570">
		<value condition="String.Contains(Container(6570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6570).ListItem.label] $INFO[Container(6570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Title) + String.Contains(Container(6570).ListItem.FolderPath, pvr://)">$INFO[Container(6570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Season) + !String.IsEmpty(Container(6570).ListItem.Episode) + !String.Contains(Container(6570).ListItem.TvShowTitle,Container(6570).ListItem.Title)">[UPPERCASE]S$INFO[Container(6570).ListItem.Season]E$INFO[Container(6570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Title)">$INFO[Container(6570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Label)">$INFO[Container(6570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-6570">
		<value condition="!String.IsEmpty(Container(6570).ListItem.TvShowTitle) + !String.IsEmpty(Container(6570).ListItem.Genre)">$INFO[Container(6570).ListItem.TvShowTitle,, • ]$INFO[Container(6570).ListItem.Year,, • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.TvShowTitle)">$INFO[Container(6570).ListItem.TvShowTitle,, • ]$INFO[Container(6570).ListItem.Premiered,, • ]$INFO[Container(6570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Year)">$INFO[Container(6570).ListItem.Year,, • ]$INFO[Container(6570).ListItem.Duration,,min. • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Artist) + !String.IsEmpty(Container(6570).ListItem.Album)">$INFO[Container(6570).ListItem.Artist,, • ]$INFO[Container(6570).ListItem.Album,, • ]$INFO[Container(6570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.Property(StartTime))">$INFO[Container(6570).ListItem.Property(ChannelName),, • ]$INFO[Container(6570).ListItem.Property(StartTime),, - ]$INFO[Container(6570).ListItem.Property(EndTime),, • ]$INFO[Container(6570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6570).ListItem.StartTime)">$INFO[Container(6570).ListItem.ChannelName,, • ]$INFO[Container(6570).ListItem.StartTime,, - ]$INFO[Container(6570).ListItem.EndTime,, • ]$INFO[Container(6570).ListItem.Genre]</value>
		</variable>
	<variable name="6580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-6580">
		<value condition="String.Contains(Container(6580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(6580).ListItem.label] $INFO[Container(6580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Title) + String.Contains(Container(6580).ListItem.FolderPath, pvr://)">$INFO[Container(6580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Season) + !String.IsEmpty(Container(6580).ListItem.Episode) + !String.Contains(Container(6580).ListItem.TvShowTitle,Container(6580).ListItem.Title)">[UPPERCASE]S$INFO[Container(6580).ListItem.Season]E$INFO[Container(6580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(6580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Title)">$INFO[Container(6580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Label)">$INFO[Container(6580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-6580">
		<value condition="!String.IsEmpty(Container(6580).ListItem.TvShowTitle) + !String.IsEmpty(Container(6580).ListItem.Genre)">$INFO[Container(6580).ListItem.TvShowTitle,, • ]$INFO[Container(6580).ListItem.Year,, • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.TvShowTitle)">$INFO[Container(6580).ListItem.TvShowTitle,, • ]$INFO[Container(6580).ListItem.Premiered,, • ]$INFO[Container(6580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Year)">$INFO[Container(6580).ListItem.Year,, • ]$INFO[Container(6580).ListItem.Duration,,min. • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Artist) + !String.IsEmpty(Container(6580).ListItem.Album)">$INFO[Container(6580).ListItem.Artist,, • ]$INFO[Container(6580).ListItem.Album,, • ]$INFO[Container(6580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.Property(StartTime))">$INFO[Container(6580).ListItem.Property(ChannelName),, • ]$INFO[Container(6580).ListItem.Property(StartTime),, - ]$INFO[Container(6580).ListItem.Property(EndTime),, • ]$INFO[Container(6580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(6580).ListItem.StartTime)">$INFO[Container(6580).ListItem.ChannelName,, • ]$INFO[Container(6580).ListItem.StartTime,, - ]$INFO[Container(6580).ListItem.EndTime,, • ]$INFO[Container(6580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-6">
		<value condition="Skin.String(widgetvalue-musicvideos,7)" />
		<value condition="Skin.String(widgetvalue-musicvideos,6)" />
		<value condition="Skin.String(widgetvalue-musicvideos,5)" />
		<value condition="Skin.String(widgetvalue-musicvideos,4)" />
		<value condition="Skin.String(widgetvalue-musicvideos,3)" />
		<value condition="Skin.String(widgetvalue-musicvideos,2)" />
		<value condition="Skin.String(widgetvalue-musicvideos,1)" />
		<value>$LOCALIZE[20390]</value>
		</variable>
	<variable name="9510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-9510">
		<value condition="String.Contains(Container(9510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9510).ListItem.label] $INFO[Container(9510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Title) + String.Contains(Container(9510).ListItem.FolderPath, pvr://)">$INFO[Container(9510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Season) + !String.IsEmpty(Container(9510).ListItem.Episode) + !String.Contains(Container(9510).ListItem.TvShowTitle,Container(9510).ListItem.Title)">[UPPERCASE]S$INFO[Container(9510).ListItem.Season]E$INFO[Container(9510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Title)">$INFO[Container(9510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Label)">$INFO[Container(9510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-9510">
		<value condition="!String.IsEmpty(Container(9510).ListItem.TvShowTitle) + !String.IsEmpty(Container(9510).ListItem.Genre)">$INFO[Container(9510).ListItem.TvShowTitle,, • ]$INFO[Container(9510).ListItem.Year,, • ]$INFO[Container(9510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.TvShowTitle)">$INFO[Container(9510).ListItem.TvShowTitle,, • ]$INFO[Container(9510).ListItem.Premiered,, • ]$INFO[Container(9510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Year)">$INFO[Container(9510).ListItem.Year,, • ]$INFO[Container(9510).ListItem.Duration,,min. • ]$INFO[Container(9510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Artist) + !String.IsEmpty(Container(9510).ListItem.Album)">$INFO[Container(9510).ListItem.Artist,, • ]$INFO[Container(9510).ListItem.Album,, • ]$INFO[Container(9510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.Property(StartTime))">$INFO[Container(9510).ListItem.Property(ChannelName),, • ]$INFO[Container(9510).ListItem.Property(StartTime),, - ]$INFO[Container(9510).ListItem.Property(EndTime),, • ]$INFO[Container(9510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9510).ListItem.StartTime)">$INFO[Container(9510).ListItem.ChannelName,, • ]$INFO[Container(9510).ListItem.StartTime,, - ]$INFO[Container(9510).ListItem.EndTime,, • ]$INFO[Container(9510).ListItem.Genre]</value>
		</variable>
	<variable name="9520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-9520">
		<value condition="String.Contains(Container(9520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9520).ListItem.label] $INFO[Container(9520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Title) + String.Contains(Container(9520).ListItem.FolderPath, pvr://)">$INFO[Container(9520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Season) + !String.IsEmpty(Container(9520).ListItem.Episode) + !String.Contains(Container(9520).ListItem.TvShowTitle,Container(9520).ListItem.Title)">[UPPERCASE]S$INFO[Container(9520).ListItem.Season]E$INFO[Container(9520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Title)">$INFO[Container(9520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Label)">$INFO[Container(9520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-9520">
		<value condition="!String.IsEmpty(Container(9520).ListItem.TvShowTitle) + !String.IsEmpty(Container(9520).ListItem.Genre)">$INFO[Container(9520).ListItem.TvShowTitle,, • ]$INFO[Container(9520).ListItem.Year,, • ]$INFO[Container(9520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.TvShowTitle)">$INFO[Container(9520).ListItem.TvShowTitle,, • ]$INFO[Container(9520).ListItem.Premiered,, • ]$INFO[Container(9520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Year)">$INFO[Container(9520).ListItem.Year,, • ]$INFO[Container(9520).ListItem.Duration,,min. • ]$INFO[Container(9520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Artist) + !String.IsEmpty(Container(9520).ListItem.Album)">$INFO[Container(9520).ListItem.Artist,, • ]$INFO[Container(9520).ListItem.Album,, • ]$INFO[Container(9520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.Property(StartTime))">$INFO[Container(9520).ListItem.Property(ChannelName),, • ]$INFO[Container(9520).ListItem.Property(StartTime),, - ]$INFO[Container(9520).ListItem.Property(EndTime),, • ]$INFO[Container(9520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9520).ListItem.StartTime)">$INFO[Container(9520).ListItem.ChannelName,, • ]$INFO[Container(9520).ListItem.StartTime,, - ]$INFO[Container(9520).ListItem.EndTime,, • ]$INFO[Container(9520).ListItem.Genre]</value>
		</variable>
	<variable name="9530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-9530">
		<value condition="String.Contains(Container(9530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9530).ListItem.label] $INFO[Container(9530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Title) + String.Contains(Container(9530).ListItem.FolderPath, pvr://)">$INFO[Container(9530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Season) + !String.IsEmpty(Container(9530).ListItem.Episode) + !String.Contains(Container(9530).ListItem.TvShowTitle,Container(9530).ListItem.Title)">[UPPERCASE]S$INFO[Container(9530).ListItem.Season]E$INFO[Container(9530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Title)">$INFO[Container(9530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Label)">$INFO[Container(9530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-9530">
		<value condition="!String.IsEmpty(Container(9530).ListItem.TvShowTitle) + !String.IsEmpty(Container(9530).ListItem.Genre)">$INFO[Container(9530).ListItem.TvShowTitle,, • ]$INFO[Container(9530).ListItem.Year,, • ]$INFO[Container(9530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.TvShowTitle)">$INFO[Container(9530).ListItem.TvShowTitle,, • ]$INFO[Container(9530).ListItem.Premiered,, • ]$INFO[Container(9530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Year)">$INFO[Container(9530).ListItem.Year,, • ]$INFO[Container(9530).ListItem.Duration,,min. • ]$INFO[Container(9530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Artist) + !String.IsEmpty(Container(9530).ListItem.Album)">$INFO[Container(9530).ListItem.Artist,, • ]$INFO[Container(9530).ListItem.Album,, • ]$INFO[Container(9530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.Property(StartTime))">$INFO[Container(9530).ListItem.Property(ChannelName),, • ]$INFO[Container(9530).ListItem.Property(StartTime),, - ]$INFO[Container(9530).ListItem.Property(EndTime),, • ]$INFO[Container(9530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9530).ListItem.StartTime)">$INFO[Container(9530).ListItem.ChannelName,, • ]$INFO[Container(9530).ListItem.StartTime,, - ]$INFO[Container(9530).ListItem.EndTime,, • ]$INFO[Container(9530).ListItem.Genre]</value>
		</variable>
	<variable name="9540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-9540">
		<value condition="String.Contains(Container(9540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9540).ListItem.label] $INFO[Container(9540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Title) + String.Contains(Container(9540).ListItem.FolderPath, pvr://)">$INFO[Container(9540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Season) + !String.IsEmpty(Container(9540).ListItem.Episode) + !String.Contains(Container(9540).ListItem.TvShowTitle,Container(9540).ListItem.Title)">[UPPERCASE]S$INFO[Container(9540).ListItem.Season]E$INFO[Container(9540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Title)">$INFO[Container(9540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Label)">$INFO[Container(9540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-9540">
		<value condition="!String.IsEmpty(Container(9540).ListItem.TvShowTitle) + !String.IsEmpty(Container(9540).ListItem.Genre)">$INFO[Container(9540).ListItem.TvShowTitle,, • ]$INFO[Container(9540).ListItem.Year,, • ]$INFO[Container(9540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.TvShowTitle)">$INFO[Container(9540).ListItem.TvShowTitle,, • ]$INFO[Container(9540).ListItem.Premiered,, • ]$INFO[Container(9540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Year)">$INFO[Container(9540).ListItem.Year,, • ]$INFO[Container(9540).ListItem.Duration,,min. • ]$INFO[Container(9540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Artist) + !String.IsEmpty(Container(9540).ListItem.Album)">$INFO[Container(9540).ListItem.Artist,, • ]$INFO[Container(9540).ListItem.Album,, • ]$INFO[Container(9540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.Property(StartTime))">$INFO[Container(9540).ListItem.Property(ChannelName),, • ]$INFO[Container(9540).ListItem.Property(StartTime),, - ]$INFO[Container(9540).ListItem.Property(EndTime),, • ]$INFO[Container(9540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9540).ListItem.StartTime)">$INFO[Container(9540).ListItem.ChannelName,, • ]$INFO[Container(9540).ListItem.StartTime,, - ]$INFO[Container(9540).ListItem.EndTime,, • ]$INFO[Container(9540).ListItem.Genre]</value>
		</variable>
	<variable name="9550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-9550">
		<value condition="String.Contains(Container(9550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9550).ListItem.label] $INFO[Container(9550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Title) + String.Contains(Container(9550).ListItem.FolderPath, pvr://)">$INFO[Container(9550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Season) + !String.IsEmpty(Container(9550).ListItem.Episode) + !String.Contains(Container(9550).ListItem.TvShowTitle,Container(9550).ListItem.Title)">[UPPERCASE]S$INFO[Container(9550).ListItem.Season]E$INFO[Container(9550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Title)">$INFO[Container(9550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Label)">$INFO[Container(9550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-9550">
		<value condition="!String.IsEmpty(Container(9550).ListItem.TvShowTitle) + !String.IsEmpty(Container(9550).ListItem.Genre)">$INFO[Container(9550).ListItem.TvShowTitle,, • ]$INFO[Container(9550).ListItem.Year,, • ]$INFO[Container(9550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.TvShowTitle)">$INFO[Container(9550).ListItem.TvShowTitle,, • ]$INFO[Container(9550).ListItem.Premiered,, • ]$INFO[Container(9550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Year)">$INFO[Container(9550).ListItem.Year,, • ]$INFO[Container(9550).ListItem.Duration,,min. • ]$INFO[Container(9550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Artist) + !String.IsEmpty(Container(9550).ListItem.Album)">$INFO[Container(9550).ListItem.Artist,, • ]$INFO[Container(9550).ListItem.Album,, • ]$INFO[Container(9550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.Property(StartTime))">$INFO[Container(9550).ListItem.Property(ChannelName),, • ]$INFO[Container(9550).ListItem.Property(StartTime),, - ]$INFO[Container(9550).ListItem.Property(EndTime),, • ]$INFO[Container(9550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9550).ListItem.StartTime)">$INFO[Container(9550).ListItem.ChannelName,, • ]$INFO[Container(9550).ListItem.StartTime,, - ]$INFO[Container(9550).ListItem.EndTime,, • ]$INFO[Container(9550).ListItem.Genre]</value>
		</variable>
	<variable name="9560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-9560">
		<value condition="String.Contains(Container(9560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9560).ListItem.label] $INFO[Container(9560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Title) + String.Contains(Container(9560).ListItem.FolderPath, pvr://)">$INFO[Container(9560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Season) + !String.IsEmpty(Container(9560).ListItem.Episode) + !String.Contains(Container(9560).ListItem.TvShowTitle,Container(9560).ListItem.Title)">[UPPERCASE]S$INFO[Container(9560).ListItem.Season]E$INFO[Container(9560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Title)">$INFO[Container(9560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Label)">$INFO[Container(9560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-9560">
		<value condition="!String.IsEmpty(Container(9560).ListItem.TvShowTitle) + !String.IsEmpty(Container(9560).ListItem.Genre)">$INFO[Container(9560).ListItem.TvShowTitle,, • ]$INFO[Container(9560).ListItem.Year,, • ]$INFO[Container(9560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.TvShowTitle)">$INFO[Container(9560).ListItem.TvShowTitle,, • ]$INFO[Container(9560).ListItem.Premiered,, • ]$INFO[Container(9560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Year)">$INFO[Container(9560).ListItem.Year,, • ]$INFO[Container(9560).ListItem.Duration,,min. • ]$INFO[Container(9560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Artist) + !String.IsEmpty(Container(9560).ListItem.Album)">$INFO[Container(9560).ListItem.Artist,, • ]$INFO[Container(9560).ListItem.Album,, • ]$INFO[Container(9560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.Property(StartTime))">$INFO[Container(9560).ListItem.Property(ChannelName),, • ]$INFO[Container(9560).ListItem.Property(StartTime),, - ]$INFO[Container(9560).ListItem.Property(EndTime),, • ]$INFO[Container(9560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9560).ListItem.StartTime)">$INFO[Container(9560).ListItem.ChannelName,, • ]$INFO[Container(9560).ListItem.StartTime,, - ]$INFO[Container(9560).ListItem.EndTime,, • ]$INFO[Container(9560).ListItem.Genre]</value>
		</variable>
	<variable name="9570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-9570">
		<value condition="String.Contains(Container(9570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9570).ListItem.label] $INFO[Container(9570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Title) + String.Contains(Container(9570).ListItem.FolderPath, pvr://)">$INFO[Container(9570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Season) + !String.IsEmpty(Container(9570).ListItem.Episode) + !String.Contains(Container(9570).ListItem.TvShowTitle,Container(9570).ListItem.Title)">[UPPERCASE]S$INFO[Container(9570).ListItem.Season]E$INFO[Container(9570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Title)">$INFO[Container(9570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Label)">$INFO[Container(9570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-9570">
		<value condition="!String.IsEmpty(Container(9570).ListItem.TvShowTitle) + !String.IsEmpty(Container(9570).ListItem.Genre)">$INFO[Container(9570).ListItem.TvShowTitle,, • ]$INFO[Container(9570).ListItem.Year,, • ]$INFO[Container(9570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.TvShowTitle)">$INFO[Container(9570).ListItem.TvShowTitle,, • ]$INFO[Container(9570).ListItem.Premiered,, • ]$INFO[Container(9570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Year)">$INFO[Container(9570).ListItem.Year,, • ]$INFO[Container(9570).ListItem.Duration,,min. • ]$INFO[Container(9570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Artist) + !String.IsEmpty(Container(9570).ListItem.Album)">$INFO[Container(9570).ListItem.Artist,, • ]$INFO[Container(9570).ListItem.Album,, • ]$INFO[Container(9570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.Property(StartTime))">$INFO[Container(9570).ListItem.Property(ChannelName),, • ]$INFO[Container(9570).ListItem.Property(StartTime),, - ]$INFO[Container(9570).ListItem.Property(EndTime),, • ]$INFO[Container(9570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9570).ListItem.StartTime)">$INFO[Container(9570).ListItem.ChannelName,, • ]$INFO[Container(9570).ListItem.StartTime,, - ]$INFO[Container(9570).ListItem.EndTime,, • ]$INFO[Container(9570).ListItem.Genre]</value>
		</variable>
	<variable name="9580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-9580">
		<value condition="String.Contains(Container(9580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(9580).ListItem.label] $INFO[Container(9580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Title) + String.Contains(Container(9580).ListItem.FolderPath, pvr://)">$INFO[Container(9580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Season) + !String.IsEmpty(Container(9580).ListItem.Episode) + !String.Contains(Container(9580).ListItem.TvShowTitle,Container(9580).ListItem.Title)">[UPPERCASE]S$INFO[Container(9580).ListItem.Season]E$INFO[Container(9580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(9580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Title)">$INFO[Container(9580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Label)">$INFO[Container(9580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-9580">
		<value condition="!String.IsEmpty(Container(9580).ListItem.TvShowTitle) + !String.IsEmpty(Container(9580).ListItem.Genre)">$INFO[Container(9580).ListItem.TvShowTitle,, • ]$INFO[Container(9580).ListItem.Year,, • ]$INFO[Container(9580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.TvShowTitle)">$INFO[Container(9580).ListItem.TvShowTitle,, • ]$INFO[Container(9580).ListItem.Premiered,, • ]$INFO[Container(9580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Year)">$INFO[Container(9580).ListItem.Year,, • ]$INFO[Container(9580).ListItem.Duration,,min. • ]$INFO[Container(9580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Artist) + !String.IsEmpty(Container(9580).ListItem.Album)">$INFO[Container(9580).ListItem.Artist,, • ]$INFO[Container(9580).ListItem.Album,, • ]$INFO[Container(9580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.Property(StartTime))">$INFO[Container(9580).ListItem.Property(ChannelName),, • ]$INFO[Container(9580).ListItem.Property(StartTime),, - ]$INFO[Container(9580).ListItem.Property(EndTime),, • ]$INFO[Container(9580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(9580).ListItem.StartTime)">$INFO[Container(9580).ListItem.ChannelName,, • ]$INFO[Container(9580).ListItem.StartTime,, - ]$INFO[Container(9580).ListItem.EndTime,, • ]$INFO[Container(9580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-9">
		<value condition="Skin.String(widgetvalue-weather,7)" />
		<value condition="Skin.String(widgetvalue-weather,6)" />
		<value condition="Skin.String(widgetvalue-weather,5)" />
		<value condition="Skin.String(widgetvalue-weather,4)" />
		<value condition="Skin.String(widgetvalue-weather,3)" />
		<value condition="Skin.String(widgetvalue-weather,2)" />
		<value condition="Skin.String(widgetvalue-weather,1)" />
		<value>$LOCALIZE[8]</value>
		</variable>
	<variable name="19510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-19510">
		<value condition="String.Contains(Container(19510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(19510).ListItem.label] $INFO[Container(19510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(19510).ListItem.Title) + String.Contains(Container(19510).ListItem.FolderPath, pvr://)">$INFO[Container(19510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19510).ListItem.Season) + !String.IsEmpty(Container(19510).ListItem.Episode) + !String.Contains(Container(19510).ListItem.TvShowTitle,Container(19510).ListItem.Title)">[UPPERCASE]S$INFO[Container(19510).ListItem.Season]E$INFO[Container(19510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(19510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19510).ListItem.Title)">$INFO[Container(19510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19510).ListItem.Label)">$INFO[Container(19510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-19510">
		<value condition="!String.IsEmpty(Container(19510).ListItem.TvShowTitle) + !String.IsEmpty(Container(19510).ListItem.Genre)">$INFO[Container(19510).ListItem.TvShowTitle,, • ]$INFO[Container(19510).ListItem.Year,, • ]$INFO[Container(19510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19510).ListItem.TvShowTitle)">$INFO[Container(19510).ListItem.TvShowTitle,, • ]$INFO[Container(19510).ListItem.Premiered,, • ]$INFO[Container(19510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(19510).ListItem.Year)">$INFO[Container(19510).ListItem.Year,, • ]$INFO[Container(19510).ListItem.Duration,,min. • ]$INFO[Container(19510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19510).ListItem.Artist) + !String.IsEmpty(Container(19510).ListItem.Album)">$INFO[Container(19510).ListItem.Artist,, • ]$INFO[Container(19510).ListItem.Album,, • ]$INFO[Container(19510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(19510).ListItem.Property(StartTime))">$INFO[Container(19510).ListItem.Property(ChannelName),, • ]$INFO[Container(19510).ListItem.Property(StartTime),, - ]$INFO[Container(19510).ListItem.Property(EndTime),, • ]$INFO[Container(19510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19510).ListItem.StartTime)">$INFO[Container(19510).ListItem.ChannelName,, • ]$INFO[Container(19510).ListItem.StartTime,, - ]$INFO[Container(19510).ListItem.EndTime,, • ]$INFO[Container(19510).ListItem.Genre]</value>
		</variable>
	<variable name="19520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-19520">
		<value condition="String.Contains(Container(19520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(19520).ListItem.label] $INFO[Container(19520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(19520).ListItem.Title) + String.Contains(Container(19520).ListItem.FolderPath, pvr://)">$INFO[Container(19520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19520).ListItem.Season) + !String.IsEmpty(Container(19520).ListItem.Episode) + !String.Contains(Container(19520).ListItem.TvShowTitle,Container(19520).ListItem.Title)">[UPPERCASE]S$INFO[Container(19520).ListItem.Season]E$INFO[Container(19520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(19520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19520).ListItem.Title)">$INFO[Container(19520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19520).ListItem.Label)">$INFO[Container(19520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-19520">
		<value condition="!String.IsEmpty(Container(19520).ListItem.TvShowTitle) + !String.IsEmpty(Container(19520).ListItem.Genre)">$INFO[Container(19520).ListItem.TvShowTitle,, • ]$INFO[Container(19520).ListItem.Year,, • ]$INFO[Container(19520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19520).ListItem.TvShowTitle)">$INFO[Container(19520).ListItem.TvShowTitle,, • ]$INFO[Container(19520).ListItem.Premiered,, • ]$INFO[Container(19520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(19520).ListItem.Year)">$INFO[Container(19520).ListItem.Year,, • ]$INFO[Container(19520).ListItem.Duration,,min. • ]$INFO[Container(19520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19520).ListItem.Artist) + !String.IsEmpty(Container(19520).ListItem.Album)">$INFO[Container(19520).ListItem.Artist,, • ]$INFO[Container(19520).ListItem.Album,, • ]$INFO[Container(19520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(19520).ListItem.Property(StartTime))">$INFO[Container(19520).ListItem.Property(ChannelName),, • ]$INFO[Container(19520).ListItem.Property(StartTime),, - ]$INFO[Container(19520).ListItem.Property(EndTime),, • ]$INFO[Container(19520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19520).ListItem.StartTime)">$INFO[Container(19520).ListItem.ChannelName,, • ]$INFO[Container(19520).ListItem.StartTime,, - ]$INFO[Container(19520).ListItem.EndTime,, • ]$INFO[Container(19520).ListItem.Genre]</value>
		</variable>
	<variable name="19530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-19530">
		<value condition="String.Contains(Container(19530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(19530).ListItem.label] $INFO[Container(19530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(19530).ListItem.Title) + String.Contains(Container(19530).ListItem.FolderPath, pvr://)">$INFO[Container(19530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19530).ListItem.Season) + !String.IsEmpty(Container(19530).ListItem.Episode) + !String.Contains(Container(19530).ListItem.TvShowTitle,Container(19530).ListItem.Title)">[UPPERCASE]S$INFO[Container(19530).ListItem.Season]E$INFO[Container(19530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(19530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19530).ListItem.Title)">$INFO[Container(19530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19530).ListItem.Label)">$INFO[Container(19530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-19530">
		<value condition="!String.IsEmpty(Container(19530).ListItem.TvShowTitle) + !String.IsEmpty(Container(19530).ListItem.Genre)">$INFO[Container(19530).ListItem.TvShowTitle,, • ]$INFO[Container(19530).ListItem.Year,, • ]$INFO[Container(19530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19530).ListItem.TvShowTitle)">$INFO[Container(19530).ListItem.TvShowTitle,, • ]$INFO[Container(19530).ListItem.Premiered,, • ]$INFO[Container(19530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(19530).ListItem.Year)">$INFO[Container(19530).ListItem.Year,, • ]$INFO[Container(19530).ListItem.Duration,,min. • ]$INFO[Container(19530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19530).ListItem.Artist) + !String.IsEmpty(Container(19530).ListItem.Album)">$INFO[Container(19530).ListItem.Artist,, • ]$INFO[Container(19530).ListItem.Album,, • ]$INFO[Container(19530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(19530).ListItem.Property(StartTime))">$INFO[Container(19530).ListItem.Property(ChannelName),, • ]$INFO[Container(19530).ListItem.Property(StartTime),, - ]$INFO[Container(19530).ListItem.Property(EndTime),, • ]$INFO[Container(19530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19530).ListItem.StartTime)">$INFO[Container(19530).ListItem.ChannelName,, • ]$INFO[Container(19530).ListItem.StartTime,, - ]$INFO[Container(19530).ListItem.EndTime,, • ]$INFO[Container(19530).ListItem.Genre]</value>
		</variable>
	<variable name="19540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-19540">
		<value condition="String.Contains(Container(19540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(19540).ListItem.label] $INFO[Container(19540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(19540).ListItem.Title) + String.Contains(Container(19540).ListItem.FolderPath, pvr://)">$INFO[Container(19540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19540).ListItem.Season) + !String.IsEmpty(Container(19540).ListItem.Episode) + !String.Contains(Container(19540).ListItem.TvShowTitle,Container(19540).ListItem.Title)">[UPPERCASE]S$INFO[Container(19540).ListItem.Season]E$INFO[Container(19540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(19540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19540).ListItem.Title)">$INFO[Container(19540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19540).ListItem.Label)">$INFO[Container(19540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-19540">
		<value condition="!String.IsEmpty(Container(19540).ListItem.TvShowTitle) + !String.IsEmpty(Container(19540).ListItem.Genre)">$INFO[Container(19540).ListItem.TvShowTitle,, • ]$INFO[Container(19540).ListItem.Year,, • ]$INFO[Container(19540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19540).ListItem.TvShowTitle)">$INFO[Container(19540).ListItem.TvShowTitle,, • ]$INFO[Container(19540).ListItem.Premiered,, • ]$INFO[Container(19540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(19540).ListItem.Year)">$INFO[Container(19540).ListItem.Year,, • ]$INFO[Container(19540).ListItem.Duration,,min. • ]$INFO[Container(19540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19540).ListItem.Artist) + !String.IsEmpty(Container(19540).ListItem.Album)">$INFO[Container(19540).ListItem.Artist,, • ]$INFO[Container(19540).ListItem.Album,, • ]$INFO[Container(19540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(19540).ListItem.Property(StartTime))">$INFO[Container(19540).ListItem.Property(ChannelName),, • ]$INFO[Container(19540).ListItem.Property(StartTime),, - ]$INFO[Container(19540).ListItem.Property(EndTime),, • ]$INFO[Container(19540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19540).ListItem.StartTime)">$INFO[Container(19540).ListItem.ChannelName,, • ]$INFO[Container(19540).ListItem.StartTime,, - ]$INFO[Container(19540).ListItem.EndTime,, • ]$INFO[Container(19540).ListItem.Genre]</value>
		</variable>
	<variable name="19550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-19550">
		<value condition="String.Contains(Container(19550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(19550).ListItem.label] $INFO[Container(19550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(19550).ListItem.Title) + String.Contains(Container(19550).ListItem.FolderPath, pvr://)">$INFO[Container(19550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19550).ListItem.Season) + !String.IsEmpty(Container(19550).ListItem.Episode) + !String.Contains(Container(19550).ListItem.TvShowTitle,Container(19550).ListItem.Title)">[UPPERCASE]S$INFO[Container(19550).ListItem.Season]E$INFO[Container(19550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(19550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19550).ListItem.Title)">$INFO[Container(19550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19550).ListItem.Label)">$INFO[Container(19550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-19550">
		<value condition="!String.IsEmpty(Container(19550).ListItem.TvShowTitle) + !String.IsEmpty(Container(19550).ListItem.Genre)">$INFO[Container(19550).ListItem.TvShowTitle,, • ]$INFO[Container(19550).ListItem.Year,, • ]$INFO[Container(19550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19550).ListItem.TvShowTitle)">$INFO[Container(19550).ListItem.TvShowTitle,, • ]$INFO[Container(19550).ListItem.Premiered,, • ]$INFO[Container(19550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(19550).ListItem.Year)">$INFO[Container(19550).ListItem.Year,, • ]$INFO[Container(19550).ListItem.Duration,,min. • ]$INFO[Container(19550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19550).ListItem.Artist) + !String.IsEmpty(Container(19550).ListItem.Album)">$INFO[Container(19550).ListItem.Artist,, • ]$INFO[Container(19550).ListItem.Album,, • ]$INFO[Container(19550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(19550).ListItem.Property(StartTime))">$INFO[Container(19550).ListItem.Property(ChannelName),, • ]$INFO[Container(19550).ListItem.Property(StartTime),, - ]$INFO[Container(19550).ListItem.Property(EndTime),, • ]$INFO[Container(19550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19550).ListItem.StartTime)">$INFO[Container(19550).ListItem.ChannelName,, • ]$INFO[Container(19550).ListItem.StartTime,, - ]$INFO[Container(19550).ListItem.EndTime,, • ]$INFO[Container(19550).ListItem.Genre]</value>
		</variable>
	<variable name="19560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-19560">
		<value condition="String.Contains(Container(19560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(19560).ListItem.label] $INFO[Container(19560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(19560).ListItem.Title) + String.Contains(Container(19560).ListItem.FolderPath, pvr://)">$INFO[Container(19560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19560).ListItem.Season) + !String.IsEmpty(Container(19560).ListItem.Episode) + !String.Contains(Container(19560).ListItem.TvShowTitle,Container(19560).ListItem.Title)">[UPPERCASE]S$INFO[Container(19560).ListItem.Season]E$INFO[Container(19560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(19560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19560).ListItem.Title)">$INFO[Container(19560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19560).ListItem.Label)">$INFO[Container(19560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-19560">
		<value condition="!String.IsEmpty(Container(19560).ListItem.TvShowTitle) + !String.IsEmpty(Container(19560).ListItem.Genre)">$INFO[Container(19560).ListItem.TvShowTitle,, • ]$INFO[Container(19560).ListItem.Year,, • ]$INFO[Container(19560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19560).ListItem.TvShowTitle)">$INFO[Container(19560).ListItem.TvShowTitle,, • ]$INFO[Container(19560).ListItem.Premiered,, • ]$INFO[Container(19560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(19560).ListItem.Year)">$INFO[Container(19560).ListItem.Year,, • ]$INFO[Container(19560).ListItem.Duration,,min. • ]$INFO[Container(19560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19560).ListItem.Artist) + !String.IsEmpty(Container(19560).ListItem.Album)">$INFO[Container(19560).ListItem.Artist,, • ]$INFO[Container(19560).ListItem.Album,, • ]$INFO[Container(19560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(19560).ListItem.Property(StartTime))">$INFO[Container(19560).ListItem.Property(ChannelName),, • ]$INFO[Container(19560).ListItem.Property(StartTime),, - ]$INFO[Container(19560).ListItem.Property(EndTime),, • ]$INFO[Container(19560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19560).ListItem.StartTime)">$INFO[Container(19560).ListItem.ChannelName,, • ]$INFO[Container(19560).ListItem.StartTime,, - ]$INFO[Container(19560).ListItem.EndTime,, • ]$INFO[Container(19560).ListItem.Genre]</value>
		</variable>
	<variable name="19570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-19570">
		<value condition="String.Contains(Container(19570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(19570).ListItem.label] $INFO[Container(19570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(19570).ListItem.Title) + String.Contains(Container(19570).ListItem.FolderPath, pvr://)">$INFO[Container(19570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19570).ListItem.Season) + !String.IsEmpty(Container(19570).ListItem.Episode) + !String.Contains(Container(19570).ListItem.TvShowTitle,Container(19570).ListItem.Title)">[UPPERCASE]S$INFO[Container(19570).ListItem.Season]E$INFO[Container(19570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(19570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19570).ListItem.Title)">$INFO[Container(19570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19570).ListItem.Label)">$INFO[Container(19570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-19570">
		<value condition="!String.IsEmpty(Container(19570).ListItem.TvShowTitle) + !String.IsEmpty(Container(19570).ListItem.Genre)">$INFO[Container(19570).ListItem.TvShowTitle,, • ]$INFO[Container(19570).ListItem.Year,, • ]$INFO[Container(19570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19570).ListItem.TvShowTitle)">$INFO[Container(19570).ListItem.TvShowTitle,, • ]$INFO[Container(19570).ListItem.Premiered,, • ]$INFO[Container(19570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(19570).ListItem.Year)">$INFO[Container(19570).ListItem.Year,, • ]$INFO[Container(19570).ListItem.Duration,,min. • ]$INFO[Container(19570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19570).ListItem.Artist) + !String.IsEmpty(Container(19570).ListItem.Album)">$INFO[Container(19570).ListItem.Artist,, • ]$INFO[Container(19570).ListItem.Album,, • ]$INFO[Container(19570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(19570).ListItem.Property(StartTime))">$INFO[Container(19570).ListItem.Property(ChannelName),, • ]$INFO[Container(19570).ListItem.Property(StartTime),, - ]$INFO[Container(19570).ListItem.Property(EndTime),, • ]$INFO[Container(19570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19570).ListItem.StartTime)">$INFO[Container(19570).ListItem.ChannelName,, • ]$INFO[Container(19570).ListItem.StartTime,, - ]$INFO[Container(19570).ListItem.EndTime,, • ]$INFO[Container(19570).ListItem.Genre]</value>
		</variable>
	<variable name="19580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-19580">
		<value condition="String.Contains(Container(19580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(19580).ListItem.label] $INFO[Container(19580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(19580).ListItem.Title) + String.Contains(Container(19580).ListItem.FolderPath, pvr://)">$INFO[Container(19580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19580).ListItem.Season) + !String.IsEmpty(Container(19580).ListItem.Episode) + !String.Contains(Container(19580).ListItem.TvShowTitle,Container(19580).ListItem.Title)">[UPPERCASE]S$INFO[Container(19580).ListItem.Season]E$INFO[Container(19580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(19580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19580).ListItem.Title)">$INFO[Container(19580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(19580).ListItem.Label)">$INFO[Container(19580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-19580">
		<value condition="!String.IsEmpty(Container(19580).ListItem.TvShowTitle) + !String.IsEmpty(Container(19580).ListItem.Genre)">$INFO[Container(19580).ListItem.TvShowTitle,, • ]$INFO[Container(19580).ListItem.Year,, • ]$INFO[Container(19580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19580).ListItem.TvShowTitle)">$INFO[Container(19580).ListItem.TvShowTitle,, • ]$INFO[Container(19580).ListItem.Premiered,, • ]$INFO[Container(19580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(19580).ListItem.Year)">$INFO[Container(19580).ListItem.Year,, • ]$INFO[Container(19580).ListItem.Duration,,min. • ]$INFO[Container(19580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19580).ListItem.Artist) + !String.IsEmpty(Container(19580).ListItem.Album)">$INFO[Container(19580).ListItem.Artist,, • ]$INFO[Container(19580).ListItem.Album,, • ]$INFO[Container(19580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(19580).ListItem.Property(StartTime))">$INFO[Container(19580).ListItem.Property(ChannelName),, • ]$INFO[Container(19580).ListItem.Property(StartTime),, - ]$INFO[Container(19580).ListItem.Property(EndTime),, • ]$INFO[Container(19580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(19580).ListItem.StartTime)">$INFO[Container(19580).ListItem.ChannelName,, • ]$INFO[Container(19580).ListItem.StartTime,, - ]$INFO[Container(19580).ListItem.EndTime,, • ]$INFO[Container(19580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-19">
		<value condition="Skin.String(widgetvalue-settings,7)" />
		<value condition="Skin.String(widgetvalue-settings,6)" />
		<value condition="Skin.String(widgetvalue-settings,5)" />
		<value condition="Skin.String(widgetvalue-settings,4)" />
		<value condition="Skin.String(widgetvalue-settings,3)" />
		<value condition="Skin.String(widgetvalue-settings,2)" />
		<value condition="Skin.String(widgetvalue-settings,1)" />
		<value>$LOCALIZE[130]</value>
		</variable>
	</includes>

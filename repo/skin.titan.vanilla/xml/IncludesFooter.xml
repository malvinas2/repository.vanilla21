<?xml version="1.0" encoding="utf-8"?>
<!--Titan-->
<includes>
	<!-- Footer -->
	<include name="Footer">
		<control type="group">
			<animation type="Conditional" condition="Control.IsVisible(77551)">
                <effect type="slide" start="0,0" end="0,800" time="400" tween="cubic" easing="inout" delay="0" />
            </animation>
            <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(showinfopanel),show)">
                <effect type="slide" start="0,0" end="0,300" time="800" tween="cubic" easing="inout" delay="0" />
            </animation>
            <visible>![Window.IsActive(pictures) + Skin.HasSetting(MyPicsDisableFooter)]</visible>

			<!--Footer Background-->
			<control type="group">						
				<control type="image">
					<posx>0</posx>
					<bottom>0</bottom>
					<width>100%</width>
					<height>110</height>
					<texture border="5">diffuse/panel.png</texture>
					<colordiffuse>$INFO[Skin.String(FooterPanelColor)]</colordiffuse>
					<visible>!Skin.HasSetting(nofooterbar)</visible>
					<visible>![Window.IsActive(Home) + Skin.HasSetting(NoFooterBarOnHome)]</visible>
				</control>
			</control>
			
			<!-- touchscreen support -->
			<include condition="Skin.HasSetting(EnableTouchSupport)">TouchControlsFooter</include>

			<!-- PVR Content -->
            <include condition="Window.IsActive(radiochannels) | Window.IsActive(tvchannels) | Window.IsActive(tvguide) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch)">FooterContentPVR</include>

            <!-- Normal Content -->
            <include condition="![Window.IsActive(radiochannels) | Window.IsActive(tvchannels) | Window.IsActive(tvguide) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch)] + !Window.IsActive(Home)">FooterContentGeneral</include>

            <!--footer on home -->
            <include condition="Window.IsActive(Home)">FooterContentHome</include>
            
            <!-- codec info normal-->
			<control type="group">
				<posx>60</posx>
				<height>50</height>
				<bottom>20</bottom>
				<include condition="[Window.IsActive(Videos) | Window.IsActive(videoplaylist) | Window.IsActive(script-globalsearch.xml)]">mediaflags</include>
                <!-- slide if touchcontrols present -->
                <animation type="Conditional" condition="Control.IsVisible(99123)">
                    <effect type="slide" start="0" end="280" time="0" tween="cubic" easing="inout" delay="0" />
                </animation>
            </control>
			
			<!--Rating normal-->
			<include condition="Window.IsActive(Videos) + ![Skin.HasSetting(StudioInFooter) | Skin.HasSetting(IMDBRatingInFooter) | Skin.HasSetting(RTRatingInFooter)]">StarRatingFooter</include>
            <include condition="Window.IsActive(Videos) + [Skin.HasSetting(StudioInFooter) | Skin.HasSetting(IMDBRatingInFooter) | Skin.HasSetting(RTRatingInFooter)]">AltRatingFooter</include>
			<include condition="Window.IsActive(MyMusicNav.xml)">StarRatingMusicFooter</include>
     			
		</control>
	</include>
    
    <include name="footerColorDiffuse">
        <colordiffuse>$INFO[Skin.String(FooterTextColor)]</colordiffuse>
    </include>
    <include name="videoInfoColorDiffuse">
        <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
    </include>
    
    <include name="ImdbTop250">
        <!-- IMDB Top 250 -->
        <control type="group">
            <height>70</height>
            <width>85</width>
            <control type="image">
                <height>70</height>
                <width>84</width>
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$VAR[AdvancedRatings_PanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
            </control>
            <control type="image">
                <!--imdb logo-->
                <top>0</top>
                <width>84</width>
                <height>40</height>
                <bordersize>2</bordersize>
                <texture>flags/imdb_logo_250.png</texture>
            </control>
            <control type="label">
                <!--Rating modern-->
                <top>38</top>
                <width>84</width>
                <height>30</height>
                <align>center</align>
                <aligny>center</aligny>
                <font>flags</font>
                <textcolor>$VAR[AdvancedRatings_TextColor]</textcolor>
                <label>$INFO[Window(Home).Property(SkinHelper.ListItem.IMDB.Top250)]</label>
            </control>
        </control>
    </include>
    
    <variable name="AdvancedRatings_PanelColor">
        <value condition="[Window.IsMedia + Control.IsVisible(523)] | [Window.IsActive(Home) + Skin.String(HomeLayout,netflix2)]">None</value>
        <value condition="Skin.String(FooterPanelColor) + !Skin.String(FooterPanelColor, None)">$INFO[Skin.String(FooterPanelColor)]</value>
        <value>ff000000</value>
    </variable>
    <variable name="AdvancedRatings_TextColor">
        <value condition="[Window.IsMedia + Control.IsVisible(523)] | [Window.IsActive(Home) + Skin.String(HomeLayout,netflix2)]">$INFO[Skin.String(ViewDetailsTextColor)]</value>
        <value condition="Skin.String(FooterTextColor) + !Skin.String(FooterPanelColor, None)">$INFO[Skin.String(FooterTextColor)]</value>
        <value>ffffffff</value>
    </variable>
    
    <include name="AdvancedRatingLayout">
        <control type="group">
            <height>70</height>
            <width>85</width>
            <control type="image">
                <height>70</height>
                <width>84</width>
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$VAR[AdvancedRatings_PanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
            </control>
            <control type="image">
                <height>70</height>
                <width>85</width>
                <bordersize>2</bordersize>
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$INFO[AdvancedRatings_PanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
            </control>
            <control type="image">
                <!--top image-->
                <top>0</top>
                <width>84</width>
                <height>40</height>
                <bordersize>2</bordersize>
                <texture background="true">$PARAM[image]</texture>
            </control>
            <control type="label">
                <!--rating text-->
                <top>40</top>
                <width>84</width>
                <height>30</height>
                <align>center</align>
                <aligny>center</aligny>
                <font>flags</font>
                <textcolor>$VAR[AdvancedRatings_TextColor]</textcolor>
                <label>$PARAM[text]</label>
            </control>
        </control>
    </include>
    
    <include name="TomatoMeter">
        <!-- Rotten Tomatoes Meter -->
        <control type="group">
            <height>70</height>
            <width>85</width>
            <control type="image">
                <height>70</height>
                <width>84</width>
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$VAR[AdvancedRatings_PanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
            </control>
            <control type="image">
                <description>Rotten tomatoes image</description>
                <top>2</top>
                <width>84</width>
                <height>37</height>
                <bordersize>2</bordersize>
                <aspectratio>keep</aspectratio>
                <texture background="true">$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Image),flags/,.png]</texture>
            </control>
            <control type="label">
                <top>38</top>
                <width>84</width>
                <height>30</height>
                <align>center</align>
                <aligny>center</aligny>
                <font>flags</font>
                <textcolor>$VAR[AdvancedRatings_TextColor]</textcolor>
                <label>$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),,%]</label>
            </control>
        </control>
    </include>
    
    <include name="TomatoAudience">
        <!-- Rotten Tomatoes Meter -->
        <control type="group">
            <height>70</height>
            <width>85</width>
            <control type="image">
                <height>70</height>
                <width>84</width>
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$VAR[AdvancedRatings_PanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
            </control>
            <control type="image">
                <top>0</top>
                <width>84</width>
                <height>37</height>
                <bordersize>2</bordersize>
                <aspectratio>keep</aspectratio>
                <texture>flags/popcorn.png</texture>
                <visible>Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter),59)</visible>
            </control>
            <control type="image">
                <top>0</top>
                <width>84</width>
                <height>37</height>
                <bordersize>2</bordersize>
                <aspectratio>keep</aspectratio>
                <texture>flags/popcorn2.png</texture>
                <visible>!Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter),59)</visible>
            </control>
            <control type="label">
                <top>38</top>
                <width>84</width>
                <height>30</height>
                <align>center</align>
                <aligny>center</aligny>
                <font>flags</font>
                <textcolor>$VAR[AdvancedRatings_TextColor]</textcolor>
                <label>$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter),,%]</label>
            </control>
        </control>
    </include>
    
    <include name="MetaCriticRating">
        <!-- Rotten Tomatoes Meter -->
        <control type="group">
            <height>70</height>
            <width>85</width>
            <control type="image">
                <height>70</height>
                <width>84</width>
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$VAR[AdvancedRatings_PanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
            </control>
            <control type="image">
                <top>2</top>
                <width>84</width>
                <height>37</height>
                <bordersize>2</bordersize>
                <aspectratio>keep</aspectratio>
                <texture>flags/metacritic.png</texture>
            </control>
            <control type="label">
                <top>38</top>
                <width>84</width>
                <height>30</height>
                <align>center</align>
                <aligny>center</aligny>
                <font>flags</font>
                <textcolor>$VAR[AdvancedRatings_TextColor]</textcolor>
                <label>$INFO[Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)]</label>
            </control>
        </control>
    </include>
    
    <include name="AltRatingFooter">
        <!--Advanced Ratings + Studio-->
        <control type="group">
            <bottom>15</bottom>
            <right>50</right>
            <include>AltRating</include>
        </control>	
    </include>
    
    <include name="AltRating">
        <!-- Tomatometer -->
        <control type="group">
            <height>70</height>
            <width>85</width>
            <bottom>0</bottom>
            <right>0</right>
            <include>TomatoMeter</include>
            <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter)) + Skin.HasSetting(RTRatingInFooter)</visible>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter))">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating))">Conditional</animation>
        </control>
        
        <!-- Tomatoaudience -->
        <control type="group">
            <height>70</height>
            <width>85</width>
            <bottom>0</bottom>
            <right>0</right>
            <include>TomatoAudience</include>
            <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter)) + Skin.HasSetting(RTRatingInFooter)</visible>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating))">Conditional</animation>
        </control>
        
        <!-- MetaCritic -->
        <control type="group">
            <height>70</height>
            <width>85</width>
            <bottom>0</bottom>
            <right>0</right>
            <include>MetaCriticRating</include>
            <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)) + Skin.HasSetting(RTRatingInFooter)</visible>
        </control>
        
        <!-- IMDB Top 250 -->
        <control type="group">
            <height>70</height>
            <width>85</width>
            <bottom>0</bottom>
            <right>0</right>
            <include>ImdbTop250</include>
            <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.IMDB.Top250)) + Skin.HasSetting(IMDBRatingInFooter)</visible>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter)) + Skin.HasSetting(RTRatingInFooter)">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter)) + Skin.HasSetting(RTRatingInFooter)">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)) + Skin.HasSetting(RTRatingInFooter)">Conditional</animation>
        </control>
        
        <!--studio logo -->
        <control type="image">
            <right>0</right>
            <bottom>-10</bottom>
            <width>400</width>
            <height>90</height>
            <aspectratio aligny="center" align="right">keep</aspectratio>
            <fadetime>300</fadetime>
            <include condition="!String.Contains(Skin.String(SkinHelper.StudioLogos.Path),colo)">footerColorDiffuse</include>
            <bordersize>2</bordersize>
            <texture background="true">$INFO[Window(home).Property(SkinHelper.ListItem.StudioLogo)]</texture>
            <visible>Skin.HasSetting(StudioInFooter)</visible>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Control.GetLabel(414783)) + Skin.HasSetting(IMDBRatingInFooter)">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.IMDB.Top250)) + Skin.HasSetting(IMDBRatingInFooter)">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter)) + Skin.HasSetting(RTRatingInFooter)">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter)) + Skin.HasSetting(RTRatingInFooter)">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)) + Skin.HasSetting(RTRatingInFooter)">Conditional</animation>
        </control>
        
        <!-- IMDB rating -->
        <control type="group">
            <visible>!String.IsEmpty(Control.GetLabel(414783)) + !String.StartsWith(Control.GetLabel(414783),songrating) + Skin.HasSetting(IMDBRatingInFooter)</visible>
            <height>70</height>
            <width>85</width>
            <bottom>0</bottom>
            <right>0</right>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.IMDB.Top250)) + Skin.HasSetting(IMDBRatingInFooter)">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter)) + Skin.HasSetting(RTRatingInFooter)">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter)) + Skin.HasSetting(RTRatingInFooter)">Conditional</animation>
            <animation effect="slide" end="-100" time="0" condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating)) + Skin.HasSetting(RTRatingInFooter)">Conditional</animation>
            <control type="image">
                <right>0</right>
                <height>70</height>
                <width>84</width>
                <bottom>0</bottom>
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$VAR[AdvancedRatings_PanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
            </control>
            <control type="image">
                <!--imdb logo-->
                <right>0</right>
                <top>0</top>
                <width>84</width>
                <height>40</height>
                <bordersize>2</bordersize>
                <texture>flags/imdb_logo.png</texture>
            </control>
            <control type="label" id="414783">
                <!--Rating modern-->
                <right>0</right>
                <bottom>2</bottom>
                <width>84</width>
                <height>30</height>
                <align>center</align>
                <aligny>center</aligny>
                <font>flags</font>
                <textcolor>$VAR[AdvancedRatings_TextColor]</textcolor>
                <label>$VAR[rating_value_imdb]</label>
            </control>
        </control>
			
    </include>
    
    <include name="FooterContentPVR">
        <!--Progress (PVR)-->
        <control type="group">
            <visible>[Window.IsActive(radiochannels) | Window.IsActive(tvchannels) | Window.IsActive(tvguide)] + !Control.IsVisible(99123)</visible>
            <bottom>20</bottom>
            <height>65</height>
            <control type="label">
                <!--Start-->
                <posx>60</posx>
                <posy>0</posy>
                <width>400</width>
                <font>flags</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <info>ListItem.StartTime</info>
            </control>
            <control type="progress">
                <!--Progress Bar-->
                <posx>200</posx>
                <posy>23</posy>
                <width>150</width>
                <height>20</height>
                <info>ListItem.Progress</info>
            </control>
            <control type="label">
                <!--End-->
                <posx>375</posx>
                <posy>0</posy>
                <width>400</width>
                <font>flags</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <info>ListItem.EndTime</info>
            </control>
        </control>
        <!-- Programname etc -->
        <control type="group">
            <bottom>35</bottom>
            <height>65</height>
            <control type="label">
                <!--live tv channel-->
                <visible>String.IsEmpty(Control.Getlabel(44123))</visible>
                <right>60</right>
                <posy>16</posy>
                <width>500</width>
                <align>right</align>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.ChannelName]</label>
            </control>
            <control type="label">
                <!--live tv programname-->
                <posx>610</posx>
                <posy>16</posy>
                <width>700</width>
                <align>center</align>
                <font>Bold30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.Title]</label>
                <visible>!Control.IsVisible(884)</visible>
            </control>
            <control type="image" id="44123">
                <right>60</right>
                <posy>0</posy>
                <width>260</width>
                <height>100</height>
                <texture background="true">$VAR[channellogo]</texture>
                <aspectratio align="right" aligny="center">keep</aspectratio>
            </control>
            <control type="label">
                <!--live tv diskspace-->
                <visible>Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch)</visible>
                <left>60</left>
                <posy>16</posy>
                <width>500</width>
                <align>left</align>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[PVR.backenddiskspace]</label>
                <visible>!Control.IsVisible(99123)</visible>
            </control>
             </control>
    </include>

    <include name="FooterContentGeneral">
        <control type="group">
            <!--Title-->
            <visible>!Window.IsActive(DialogVideoInfo.xml) + !Window.IsVisible(favourites)</visible>
            <animation effect="slide" end="0,16" time="0" condition="!Skin.HasTheme(classic)">Conditional</animation>
            <height>80</height>
            <bottom>20</bottom>
            <control type="label">
                <!--Label (classic only)-->
                <posx>840</posx>
				<!-- <posx>560</posx> -->
                <posy>0</posy>
                <width>800</width>
                <align>left</align>
                <font>Bold30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.label]</label>
                <visible>!Control.IsVisible(884)</visible>
                <scroll>true</scroll>
                <!-- <visible>![Window.IsActive(Videos) | Window.IsActive(videoplaylist)] | ListItem.IsCollection | String.IsEmpty(ListItem.VideoAspect) | Skin.String(mediaflagsstyle,disabled) | Skin.String(mediaflagsstyle,classic)</visible> -->
				<visible>!Window.IsActive(videoplaylist) | ListItem.IsCollection | String.IsEmpty(ListItem.VideoAspect) | Skin.String(mediaflagsstyle,disabled) | Skin.String(mediaflagsstyle,classic)</visible>
            </control>
            <control type="label">
                <visible>Container.Content(songs)</visible>
                <visible>!Control.IsVisible(99123)</visible>
                <!--Album, Songs-->
                <left>60</left>
                <align>left</align>
                <posy>0</posy>
                <width>500</width>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.Album]</label>
            </control>
            <control type="label">
                <!--Artist-->
                <visible>[Container.Content(albums) | Container.Content(songs)] + [String.IsEmpty(Container.ListItem.StarRating) + String.IsEmpty(Container.ListItem.UserRating) + String.IsEmpty(Container.ListItem.Rating)]</visible>
                <right>60</right>
                <posy>0</posy>
                <width>500</width>
                <align>right</align>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[ListItem.Artist]</label>
            </control>
            <control type="label">
                <!--Playlist length-->
                <visible>Window.IsActive(videoplaylist)</visible>
                <right>60</right>
                <posy>0</posy>
                <width>500</width>
                <align>right</align>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$INFO[Container.Totaltime,$LOCALIZE[31597]: ]</label>
            </control>
            <!-- repo last updated label -->
            <control type="label">
                <right>60</right>
                <align>right</align>
                <posy>0</posy>
                <width>550</width>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
                <label>$LOCALIZE[31334]: $INFO[Window().Property(Updated)]</label>
                <visible>Window.IsActive(AddonBrowser)</visible>
                <visible>!Control.IsVisible(99123)</visible>
            </control>
        </control>
    </include>
    
    <include name="FooterContentHome">
        
        <!-- RSS Feed -->
        <control type="rss">	
            <description>RSS Feed Normal - normal or touch with disabled battery</description>
            <posx>0</posx>
            <bottom>20</bottom>
            <width>1920</width>
            <height>50</height>
            <font>Reg28</font>
            <urlset>1</urlset>
            <titlecolor>$INFO[Skin.String(GeneralHighlightTextColor)]</titlecolor>
            <headlinecolor>$INFO[Skin.String(FooterTextColor)]</headlinecolor>
            <textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
            <visible>system.getbool(lookandfeel.enablerssfeeds)</visible>
            <visible>![Control.IsVisible(99123) + !Skin.HasSetting(HideBatteryStatus)]</visible>
            <visible>![[Control.IsVisible(4444) + Integer.IsGreater(Container(4444).NumItems,0)] + [Skin.String(SubmenuLayout, horizontal) | Skin.String(SubmenuLayout, tiles)]] | Skin.String(HomeLayout, simplehor)</visible>
            <visible>!Window.IsVisible(1107) + !Window.IsVisible(shutdownmenu) + [String.IsEmpty(Container(300).ListItem.Property(infoline)) | String.IsEqual(Container(300).ListItem.Property(infoline),none)]</visible>
            <animation effect="slide" start="0" end="400" time="0" condition="Control.IsVisible(99123)">Conditional</animation>
        </control>
        <control type="rss">	
            <description>RSS Feed Normal or Classic - With touch buttons enabled</description>
            <posx>400</posx>
            <bottom>20</bottom>
            <width>1300</width>
            <height>50</height>
            <font>Reg28</font>
            <urlset>1</urlset>
            <titlecolor>$INFO[Skin.String(GeneralHighlightTextColor)]</titlecolor>
            <headlinecolor>$INFO[Skin.String(FooterTextColor)]</headlinecolor>
            <textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
            <visible>system.getbool(lookandfeel.enablerssfeeds)</visible>
            <visible>Control.IsVisible(99123) + !Skin.HasSetting(HideBatteryStatus)</visible>
            <visible>![[Control.IsVisible(4444) + Integer.IsGreater(Container(4444).NumItems,0)] + [Skin.String(SubmenuLayout, horizontal) | Skin.String(SubmenuLayout, tiles)]] | Skin.String(HomeLayout, simplehor)</visible>
            <visible>!Window.IsVisible(1107) + !Window.IsVisible(shutdownmenu) + [String.IsEmpty(Container(300).ListItem.Property(infoline)) | String.IsEqual(Container(300).ListItem.Property(infoline),none)]</visible>
        </control>

        <!--infoline-->
        <control type="label">	
            <description>InfoLine</description>
            <posx>20%</posx>
            <bottom>28</bottom>
            <width>60%</width>
            <height>50</height>
            <font>Reg28</font>
            <align>center</align>
            <label>$VAR[infolinevar]</label>
            <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(FooterTextShadowColor)]</shadowcolor>
            <visible>!Window.IsVisible(1107) + !Window.IsVisible(shutdownmenu)</visible>
            <visible>![[Control.IsVisible(4444) + Integer.IsGreater(Container(4444).NumItems,0)] + [Skin.String(SubmenuLayout, horizontal) | Skin.String(SubmenuLayout, tiles)]] | Skin.String(HomeLayout, simplehor)</visible>
        </control>        
    </include>

    <!-- Power button -->
	<include name="PowerButton">
		<control type="button" id="2">
            <description>powerbutton</description>
            <width>60</width>
            <height>60</height>
            <onup>300</onup>
            <onright>300</onright>
            <onleft>300</onleft>
            <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">common/shutdown2.png</texturefocus>
            <texturenofocus colordiffuse="white">common/shutdown2.png</texturenofocus>
            <onclick>ActivateWindow(111)</onclick>
            <onfocus>ActivateWindow(111)</onfocus>
            <include>animation_fade_visible_hidden</include>
            <visible allowhiddenfocus="true">$PARAM[visibility]</visible>
        </control>
	</include>
    
    <include name="StarRatingFooter">
        <control type="group">
            <bottom>25</bottom>
            <right>60</right>
            <width>315</width>
            <height>55</height>
            <include>StarRating</include>
        </control>
    </include>
    <include name="StarRatingFooterClassic">
        <control type="group">
            <bottom>40</bottom>
            <right>60</right>
            <width>315</width>
            <height>55</height>
            <include>StarRating</include>
        </control>
    </include>
    
    <include name="StarRating">
        <control type="group">
            <width>315</width>
            <height>55</height>
            <right>0</right>
            <control type="label">
                <right>0</right>
                <height>55</height>
                <width>315</width>
                <font>Reg36</font>
                <align>right</align>
                <aligny>center</aligny>
                <textcolor>$INFO[Skin.String(FooterTextColor)]</textcolor>
                <label>$VAR[rating_value_label]</label>
            </control>
            <control type="image">
                <right>0</right>
                <width>315</width>
                <height>55</height>
                <aspectratio align="left" aligny="center">keep</aspectratio>
                <colordiffuse>$INFO[Skin.String(FooterTextColor)]</colordiffuse>
                <texture background="true">$VAR[rating_value_texture]</texture>
            </control>
        </control>
    </include>
    
    <variable name="rating_value_texture">
        <value condition="!String.IsEmpty(ListItem.UserRating)">$INFO[ListItem.UserRating,rating/,.png]</value>
		<value condition="!String.IsEmpty(VideoPlayer.UserRating)">$INFO[VideoPlayer.UserRating,rating/,.png]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.UserRating))">$INFO[Window(Home).Property(ListItem.UserRating),rating/,.png]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.UserRating))">$INFO[Window(Home).Property(SkinHelper.ListItem.UserRating),rating/,.png]</value>
        <value condition="!String.IsEmpty(ListItem.Rating)">$INFO[ListItem.Rating,rating/,.png]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Rating))">$INFO[Window(Home).Property(ListItem.Rating),rating/,.png]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating))">$INFO[Window(Home).Property(SkinHelper.ListItem.Rating),rating/,.png]</value>
    </variable>
    <variable name="rating_value_label">
        <value condition="!String.IsEmpty(ListItem.UserRating)">$INFO[ListItem.UserRating]</value>
		<value condition="!String.IsEmpty(VideoPlayer.UserRating)">$INFO[VideoPlayer.UserRating]</value>
        <value condition="!String.IsEmpty(ListItem.Rating)">$INFO[ListItem.Rating]</value>
		<value condition="!String.IsEmpty(VideoPlayer.Rating)">$INFO[VideoPlayer.Rating]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.UserRating))">$INFO[Window(Home).Property(ListItem.UserRating)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Rating))">$INFO[Window(Home).Property(ListItem.Rating)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.UserRating))">$INFO[Window(Home).Property(SkinHelper.ListItem.UserRating)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating))">$INFO[Window(Home).Property(SkinHelper.ListItem.Rating)]</value>
    </variable>
    <variable name="rating_value_imdb">
		<value condition="!String.IsEmpty(VideoPlayer.Rating)">$INFO[VideoPlayer.Rating]</value>
		<value condition="!String.IsEmpty(ListItem.Rating)">$INFO[ListItem.Rating]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.IMDB))">$INFO[Window(Home).Property(SkinHelper.ListItem.Rating.IMDB)]</value>
    </variable>
    
    <include name="StarRatingMusicFooter">
        <control type="group">
            <bottom>20</bottom>
            <height>80</height>
            <right>60</right>
            <control type="image">
                <!--Stars modern-->
                <right>0</right>
                <posy>20</posy>
                <width>220</width>
                <height>55</height>
                <colordiffuse>$INFO[Skin.String(FooterTextColor)]</colordiffuse>
                <texture>$VAR[musicrating_stars]</texture>
                <aspectratio>keep</aspectratio>
            </control>
        </control>
    </include>
</includes>
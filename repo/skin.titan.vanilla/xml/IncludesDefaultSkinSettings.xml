<?xml version="1.0" encoding="utf-8"?>
<includes>

    <include name="DefaultSkinSettings">
        <include condition="!Skin.HasSetting(HomeMenuDefaults46) | String.IsEmpty(Window(Home).Property(startupDone))">DefaultSkinSettingsValues</include>
        <!-- initialize some addons on startup -->
        <include condition="String.IsEmpty(Window(Home).Property(startupDone))">startupskinsettingsvalues</include>
    </include>
    
    <include name="startupskinsettingsvalues">
        <!-- initialize 3th party addons -->
        <onload condition="System.HasAddon(script.games.rom.collection.browser)">RunScript(script.games.rom.collection.browser,limit=10)</onload>
        <onload>SetProperty(startupDone,loaded,home)</onload>
    </include>
    
	<include name="DefaultSkinSettingsValues">
		
		<!-- notwendig fuer Skin-Shortcuts -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(IsTitanSkin)</onload>
		
		<!-- Layout des Startbildschirms -->
		<onload condition="!Skin.String(SubmenuLayout)">Skin.SetString(SubmenuLayout, horizontal)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(OpenSubMenuOnClick)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(AutoShowSubmenu)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(DisableAllWidgets)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(DisablePowerMenu)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(HideHomeTileIndicators)</onload>
		
		<!-- Hintergrundeinstellungen -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(UseSectionBackground)</onload>

		<!-- <onload condition="!Skin.String(BackgroundOverlayTexture.label)">Skin.SetString(BackgroundOverlayTexture.label,None)</onload> -->
        <!-- <onload condition="!Skin.String(BackgroundOverlayTexture)">Skin.SetString(BackgroundOverlayTexture,None)</onload> -->

		<onload condition="!Skin.String(BackgroundOverlayTexture.label)">Skin.SetString(BackgroundOverlayTexture.label,Default)</onload>
        <onload condition="!Skin.String(BackgroundOverlayTexture.label)">Skin.SetString(BackgroundOverlayTexture,diffuse/transparent.png)</onload>
		

			<!-- Hintergrund-Muster Farbe -->
		<onload condition="!Skin.String(BackgroundOverlayColor)">Skin.SetString(BackgroundOverlayColor,None)</onload>
        <onload condition="!Skin.String(BackgroundOverlayColor.name)">Skin.SetString(BackgroundOverlayColor.name,None)</onload>
			<!-- Hintergrund Farbuberlagerung -->
        <onload condition="!Skin.String(BackgroundDiffuseColor)">Skin.SetString(BackgroundDiffuseColor,None)</onload>
        <onload condition="!Skin.String(BackgroundDiffuseColor.name)">Skin.SetString(BackgroundDiffuseColor.name,None)</onload>

		<!-- Medienbibliothekansichten -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(ShowFanartBackground)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(EnableNativeExtraFanart,false)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(SkinHelper.EnableExtraFanart)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(DisableLandscapeThumbs)</onload>
		<onload condition="!Skin.String(mediaflagsstyle)">Skin.SetString(mediaflagsstyle, textbased - full info)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(IMDBRatingInFooter)</onload>
		<onload condition="!Skin.String(actorthumbslookup,true)">Skin.SetString(actorthumbslookup,true)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(DialogVideoInfo_HideFileName)</onload>
		<onload condition="!Skin.String(WatchedIndicator.Watched.Color)">Skin.SetBool(WatchedIndicator.Watched)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Progress.Color)">Skin.SetBool(WatchedIndicator.Progress)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Sets.Color)">Skin.SetBool(WatchedIndicator.Sets)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Episodes.Color)">Skin.SetBool(WatchedIndicator.Episodes)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(WatchedIndicator.Playing)</onload>

		<!-- Erzwungene Ansichten -->
        <onload condition="!Skin.String(SkinHelper.ForcedViews.movies)">Skin.SetString(SkinHelper.ForcedViews.movies,50)</onload>
		<onload condition="!Skin.String(SkinHelper.ForcedViews.tvshows)">Skin.SetString(SkinHelper.ForcedViews.tvshows,50)</onload>
		<onload condition="!Skin.String(SkinHelper.ForcedViews.seasons)">Skin.SetString(SkinHelper.ForcedViews.seasons,50)</onload>
		<onload condition="!Skin.String(SkinHelper.ForcedViews.episodes)">Skin.SetString(SkinHelper.ForcedViews.episodes,50)</onload>
		<onload condition="!Skin.String(SkinHelper.ForcedViews.sets)">Skin.SetString(SkinHelper.ForcedViews.sets,50)</onload>
		<onload condition="!Skin.String(SkinHelper.ForcedViews.setmovies)">Skin.SetString(SkinHelper.ForcedViews.setmovies,50)</onload>

		<!-- Wiedergabe und OSD -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(EnableOSDInfo)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetString(SkinHelper.ShowInfoAtPlaybackStart, 4)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(OSDShowInfoOnPause)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(ShowWeatherVideoInfoOSD)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(EnableBufferingProgressOSD)</onload>
		<!-- <onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetNumeric(SkinHelper.AutoCloseVideoOSD, 5)</onload> -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetString(SkinHelper.AutoCloseVideoOSD, 5)</onload>
		<onload condition="!Skin.String(osdmediaflagsstyle)">Skin.SetString(osdmediaflagsstyle, textbased - full info)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(DetailedPlotOrExtendedInfo,false)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(AlwaysShowMusicInfo)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(SkinHelper.DisableScreenSaverOnFullScreenMusic)</onload>
			<!-- Slim panel view permanently disabled, should be removed or reworked completely -->
		<onload>Skin.SetString(UseSlimOSDPanel,false)</onload>
		
		<!-- Live-Fernsehen -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetString(GuideRows, 9)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(PVRShowPreview)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(PVRGuideBackSideblade)</onload>
        <onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(pvrGuideOnFullscreenVideo)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(small_pvrchannelsosd)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(pvrGuideHighlightChannel)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(ShowEpgGenreColors)</onload>
		
		<!-- Allgemeine Skin-Einstellungen -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(alwaysShowScrollbars)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(useExtendedWeatherScreen)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(DialogYesNo_FocusNO)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(SkinHelper.EnableExtendedArt)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(ShowLabelsPosterEpisodes)</onload>
		<!-- <onload>Skin.SetString(AutoYoutubeTrailer,false)</onload> -->
		<onload>Skin.SetBool(AutoYoutubeTrailer,false)</onload>
			<!-- false, because Searching and Playing of trailers by YouTube does not seem to work with any addon: -->
			<!-- skinhelper, embuaryhelper, bingiehelper, themoviedbhelper ????? -->
		
		<!-- Intelligente Verknuepfungen -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(SmartShortcuts.playlists)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(SmartShortcuts.plex)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(SmartShortcuts.netflix)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(SmartShortcuts.emby)</onload>
		
		<!-- wahrscheinlich fuer Kontextmenu -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(DetailsShowFanart)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(View502_ShowCDart)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(View514_ShowCDart)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(View513_ShowCDart)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(View508_ShowCDart)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(View58_ShowCDart)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(PanelViewShowInfo)</onload>
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(AnimateDiscArt)</onload>		
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(GuideShowInfo)</onload>

		<!-- Netflix Ansicht -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(View523_DetailsShowFanart,false)</onload>
		<onload>Skin.SetBool(View523_UseFixedLayout)</onload>
		<onload>Skin.SetBool(View523_DisableExtraFanArt)</onload>
		<onload>Skin.SetString(View523.Tags,enable)</onload>
		
		<!-- wahrscheinlich uberflussig -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(ShowlabelsLandscape)</onload>
		<!-- wahrscheinlich uberflussig -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(HideWatchedRecentlyAdded)</onload>
		<!-- wahrscheinlich uberflussig -->
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(NetflixHomeShowLargeThumb)</onload>
		
		<onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(SkinHelper.EnableMusicArt)</onload>
		

		<onload condition="!Skin.String(SkinHelper.SpinnerTexture.label)">Skin.SetString(SkinHelper.SpinnerTexture.Path, busy_spinner/)</onload>
        <onload condition="!Skin.String(SkinHelper.SpinnerTexture.label)">Skin.SetString(SkinHelper.SpinnerTexture.Label,Default)</onload>
		<onload condition="!Skin.String(SpinnerTexture.Color)">Skin.SetString(SpinnerTexture.Color, FF00b8ff)</onload>
       

		<!-- default color settings (titan default theme blue) -->
 		<onload condition="!Skin.String(HomeViewDetailsFocusColor)">Skin.SetString(HomeViewDetailsFocusColor, FF00b8ff)</onload>
        <onload condition="!Skin.String(HomeViewDetailsFocusColor.name)">Skin.SetString(HomeViewDetailsFocusColor.name, mainblue)</onload>
 		<onload condition="!Skin.String(HeaderTextColor)">Skin.SetString(HeaderTextColor,ffffffff)</onload>
        <onload condition="!Skin.String(HeaderTextColor.name)">Skin.SetString(HeaderTextColor.name, white)</onload>
 		<onload condition="!Skin.String(HeaderTextShadowColor)">Skin.SetString(HeaderTextShadowColor, ff000000)</onload>
        <onload condition="!Skin.String(HeaderTextShadowColor.name)">Skin.SetString(HeaderTextShadowColor.name, black)</onload>
 		<onload condition="!Skin.String(ViewDetailsTextShadowColor)">Skin.SetString(ViewDetailsTextShadowColor, none)</onload>
        <onload condition="!Skin.String(ViewDetailsTextShadowColor.name)">Skin.SetString(ViewDetailsTextShadowColor.name, none)</onload>
 		<onload condition="!Skin.String(ViewDetailsTextColor)">Skin.SetString(ViewDetailsTextColor,ffffffff)</onload>
        <onload condition="!Skin.String(ViewDetailsTextColor.name)">Skin.SetString(ViewDetailsTextColor.name, white)</onload>
        <onload condition="!Skin.String(ViewDetailsHighlightTextColor)">Skin.SetString(ViewDetailsHighlightTextColor,FF00b8ff)</onload>
        <onload condition="!Skin.String(ViewDetailsHighlightTextColor.name)">Skin.SetString(ViewDetailsHighlightTextColor.name, mainblue)</onload>
        <onload condition="!Skin.String(ViewDetailsHighlightTextShadowColor)">Skin.SetString(ViewDetailsHighlightTextShadowColor,none)</onload>
        <onload condition="!Skin.String(ViewDetailsHighlightTextShadowColor.name)">Skin.SetString(ViewDetailsHighlightTextShadowColor.name, none)</onload>
        <onload condition="!Skin.String(ViewDetailsListItemTextColor)">Skin.SetString(ViewDetailsListItemTextColor,ffffffff)</onload>
        <onload condition="!Skin.String(ViewDetailsListItemTextColor.name)">Skin.SetString(ViewDetailsListItemTextColor.name, white)</onload>
        <onload condition="!Skin.String(ViewDetailsListItemTextFocusColor)">Skin.SetString(ViewDetailsListItemTextFocusColor,ff000000)</onload>
        <onload condition="!Skin.String(ViewDetailsListItemTextFocusColor.name)">Skin.SetString(ViewDetailsListItemTextFocusColor.name, black)</onload>
 		<onload condition="!Skin.String(ViewDetailsFocusColor)">Skin.SetString(ViewDetailsFocusColor, FF00b8ff)</onload>
        <onload condition="!Skin.String(ViewDetailsFocusColor.name)">Skin.SetString(ViewDetailsFocusColor.name, mainblue)</onload>
 		<onload condition="!Skin.String(ButtonFocusColor)">Skin.SetString(ButtonFocusColor, FF00b8ff)</onload>
        <onload condition="!Skin.String(ButtonFocusColor.name)">Skin.SetString(ButtonFocusColor.name, mainblue)</onload>
		
		<onload condition="!Skin.String(GeneralPanelsColor)">Skin.SetString(GeneralPanelsColor,cc011222)</onload>
        <onload condition="!Skin.String(GeneralPanelsColor.name)">Skin.SetString(GeneralPanelsColor.name,darkblue)</onload>
 		<onload condition="!Skin.String(FooterTextColor)">Skin.SetString(FooterTextColor,ffffffff)</onload>
        <onload condition="!Skin.String(FooterTextColor.name)">Skin.SetString(FooterTextColor.name,white)</onload>
 		<onload condition="!Skin.String(ButtonTextColor)">Skin.SetString(ButtonTextColor,ffffffff)</onload>
        <onload condition="!Skin.String(ButtonTextColor.name)">Skin.SetString(ButtonTextColor.name,white)</onload>
 		<onload condition="!Skin.String(ButtonFocusTextColor)">Skin.SetString(ButtonFocusTextColor, ff000000)</onload>
        <onload condition="!Skin.String(ButtonFocusTextColor.name)">Skin.SetString(ButtonFocusTextColor.name,black)</onload>
 		<onload condition="!Skin.String(GeneralTextColor)">Skin.SetString(GeneralTextColor,ffffffff)</onload>
        <onload condition="!Skin.String(GeneralTextColor.name)">Skin.SetString(GeneralTextColor.name,white)</onload>
        <onload condition="!Skin.String(GeneralHighlightTextColor)">Skin.SetString(GeneralHighlightTextColor,FF00b8ff)</onload>
        <onload condition="!Skin.String(GeneralHighlightTextColor.name)">Skin.SetString(GeneralHighlightTextColor.name,mainblue)</onload>
        	
 		<onload condition="!Skin.String(FooterPanelColor)">Skin.SetString(FooterPanelColor,cc011222)</onload>
        <onload condition="!Skin.String(FooterPanelColor.name)">Skin.SetString(FooterPanelColor.name,darkblue)</onload>
 		<onload condition="!Skin.String(GeneralPanelsColor)">Skin.SetString(GeneralPanelsColor,cc011222)</onload>
        <onload condition="!Skin.String(GeneralPanelsColor.name)">Skin.SetString(GeneralPanelsColor.name,darkblue)</onload>
 		<onload condition="!Skin.String(ViewDetailsPanelColor)">Skin.SetString(ViewDetailsPanelColor,cc011222)</onload>
        <onload condition="!Skin.String(ViewDetailsPanelColor.name)">Skin.SetString(ViewDetailsPanelColor.name,darkblue)</onload>
 		<onload condition="!Skin.String(OSDPanelColor)">Skin.SetString(OSDPanelColor,cc011222)</onload>
        <onload condition="!Skin.String(OSDPanelColor.name)">Skin.SetString(OSDPanelColor.name,darkblue)</onload>
 		<onload condition="!Skin.String(ButtonColor)">Skin.SetString(ButtonColor,8c002e63)</onload>
        <onload condition="!Skin.String(ButtonColor.name)">Skin.SetString(ButtonColor.name,Custom)</onload>
 		<onload condition="!Skin.String(FooterTextShadowColor)">Skin.SetString(FooterTextShadowColor,None)</onload>
        <onload condition="!Skin.String(FooterTextShadowColor.name)">Skin.SetString(FooterTextShadowColor.name,None)</onload>
 		<onload condition="!Skin.String(OSDPrimaryTextColor)">Skin.SetString(OSDPrimaryTextColor,ffffffff)</onload>
        <onload condition="!Skin.String(OSDPrimaryTextColor.name)">Skin.SetString(OSDPrimaryTextColor.name,white)</onload>
 		<onload condition="!Skin.String(OSDPrimaryTextShadowColor)">Skin.SetString(OSDPrimaryTextShadowColor,None)</onload>
        <onload condition="!Skin.String(OSDPrimaryTextShadowColor.name)">Skin.SetString(OSDPrimaryTextShadowColor.name,None)</onload>
 		<onload condition="!Skin.String(OSDSecondaryTextColor)">Skin.SetString(OSDSecondaryTextColor, FF00b8ff)</onload>
        <onload condition="!Skin.String(OSDSecondaryTextColor.name)">Skin.SetString(OSDSecondaryTextColor.name,mainblue)</onload>
 		<onload condition="!Skin.String(OSDSecondaryTextShadowColor)">Skin.SetString(OSDSecondaryTextShadowColor,None)</onload>
        <onload condition="!Skin.String(OSDSecondaryTextShadowColor.name)">Skin.SetString(OSDSecondaryTextShadowColor.name,None)</onload>
 		<onload condition="!Skin.String(OSDProgressBarColor)">Skin.SetString(OSDProgressBarColor,FF00b8ff)</onload>
        <onload condition="!Skin.String(OSDProgressBarColor.name)">Skin.SetString(OSDProgressBarColor.name,mainblue)</onload>
 		<onload condition="!Skin.String(OSDProgressBarBackgroundColor)">Skin.SetString(OSDProgressBarBackgroundColor,None)</onload>
        <onload condition="!Skin.String(OSDProgressBarBackgroundColor.name)">Skin.SetString(OSDProgressBarBackgroundColor.name,None)</onload>
		
		<onload condition="!Skin.String(OSDProgressBarCacheColor)">Skin.SetString(OSDProgressBarCacheColor,ffffffff)</onload>
        <onload condition="!Skin.String(OSDProgressBarCacheColor.name)">Skin.SetString(OSDProgressBarCacheColor.name,white)</onload>
 		<onload condition="!Skin.String(OSDProgressBarBorderColor)">Skin.SetString(OSDProgressBarBorderColor,ffffffff)</onload>
        <onload condition="!Skin.String(OSDProgressBarBorderColor.name)">Skin.SetString(OSDProgressBarBorderColor.name,white)</onload>
 		<onload condition="!Skin.String(OSDButtonsFocusColor)">Skin.SetString(OSDButtonsFocusColor, FF00b8ff)</onload>
        <onload condition="!Skin.String(OSDButtonsFocusColor.name)">Skin.SetString(OSDButtonsFocusColor.name,mainblue)</onload>
 		<onload condition="!Skin.String(OSDButtonsColor)">Skin.SetString(OSDButtonsColor,AAFFFFFF)</onload>
        <onload condition="!Skin.String(OSDButtonsColor.name)">Skin.SetString(OSDButtonsColor.name,white)</onload>
 		<onload condition="!Skin.String(ScrollbarBackgroundColor)">Skin.SetString(ScrollbarBackgroundColor,aa003153)</onload>
        <onload condition="!Skin.String(ScrollbarBackgroundColor.name)">Skin.SetString(ScrollbarBackgroundColor.name,prussian blue)</onload>
 		<onload condition="!Skin.String(ScrollbarUnfocusedColor)">Skin.SetString(ScrollbarUnfocusedColor,aa00b8ff)</onload>
        <onload condition="!Skin.String(ScrollbarUnfocusedColor.name)">Skin.SetString(ScrollbarUnfocusedColor.name,mainblue)</onload>
 		<onload condition="!Skin.String(ScrollbarFocusedColor)">Skin.SetString(ScrollbarFocusedColor,ff00b8ff)</onload>
        <onload condition="!Skin.String(ScrollbarFocusedColor.name)">Skin.SetString(ScrollbarFocusedColor.name,mainblue)</onload>

		<onload condition="!Skin.String(WatchedIndicator.Watched.Color)">Skin.SetString(WatchedIndicator.Watched.Color,cc00b8ff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Watched.Color.name)">Skin.SetString(WatchedIndicator.Watched.Color.name,mainblue)</onload>
 		<onload condition="!Skin.String(WatchedIndicator.Watched.TextColor)">Skin.SetString(WatchedIndicator.Watched.TextColor,ffffffff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Watched.TextColor.name)">Skin.SetString(WatchedIndicator.Watched.TextColor.name,white)</onload>
        <onload condition="!Skin.String(WatchedIndicator.UnWatched.Color)">Skin.SetString(WatchedIndicator.UnWatched.Color,cc00b8ff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.UnWatched.Color.name)">Skin.SetString(WatchedIndicator.UnWatched.Color.name,mainblue)</onload>
 		<onload condition="!Skin.String(WatchedIndicator.UnWatched.TextColor)">Skin.SetString(WatchedIndicator.UnWatched.TextColor,ffffffff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.UnWatched.TextColor.name)">Skin.SetString(WatchedIndicator.UnWatched.TextColor.name,white)</onload>
		
		<onload condition="!Skin.String(WatchedIndicator.Progress.Color)">Skin.SetString(WatchedIndicator.Progress.Color,cc00b8ff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Progress.Color.name)">Skin.SetString(WatchedIndicator.Progress.Color.name,mainblue)</onload>
 		<onload condition="!Skin.String(WatchedIndicator.Progress.TextColor)">Skin.SetString(WatchedIndicator.Progress.TextColor,ffffffff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Progress.TextColor.name)">Skin.SetString(WatchedIndicator.Progress.TextColor.name,white)</onload>
		
		<onload condition="!Skin.String(WatchedIndicator.Sets.Color)">Skin.SetString(WatchedIndicator.Sets.Color,cc00b8ff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Sets.Color.name)">Skin.SetString(WatchedIndicator.Sets.Color.name,mainblue)</onload>
 		<onload condition="!Skin.String(WatchedIndicator.Sets.TextColor)">Skin.SetString(WatchedIndicator.Sets.TextColor,ffffffff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Sets.TextColor.name)">Skin.SetString(WatchedIndicator.Sets.TextColor.name,white)</onload>
 		<onload condition="!Skin.String(WatchedIndicator.Episodes.Color)">Skin.SetString(WatchedIndicator.Episodes.Color,cc00b8ff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Episodes.Color.name)">Skin.SetString(WatchedIndicator.Episodes.Color.name,mainblue)</onload>
 		<onload condition="!Skin.String(WatchedIndicator.Episodes.TextColor)">Skin.SetString(WatchedIndicator.Episodes.TextColor,ffffffff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Episodes.TextColor.name)">Skin.SetString(WatchedIndicator.Episodes.TextColor.name,white)</onload>
		
        <onload condition="!Skin.String(WatchedIndicator.Playing.Color)">Skin.SetString(WatchedIndicator.Playing.Color,cc181818)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Playing.Color.name)">Skin.SetString(WatchedIndicator.Playing.Color.name,grey)</onload>
 		<onload condition="!Skin.String(WatchedIndicator.Playing.TextColor)">Skin.SetString(WatchedIndicator.Playing.TextColor,ffffffff)</onload>
        <onload condition="!Skin.String(WatchedIndicator.Playing.TextColor.name)">Skin.SetString(WatchedIndicator.Playing.TextColor.name,white)</onload>
		
		<onload condition="!Skin.String(CaseOverlays.Color)">Skin.SetString(CaseOverlays.Color,dd0047ab)</onload>
        <onload condition="!Skin.String(CaseOverlays.Color.name)">Skin.SetString(CaseOverlays.Color.name,cobalt)</onload>
 		<onload condition="!Skin.String(CaseOverlays.TextColor)">Skin.SetString(CaseOverlays.TextColor,DDFFFFFF)</onload>
        <onload condition="!Skin.String(CaseOverlays.TextColor.name)">Skin.SetString(CaseOverlays.TextColor.name,white)</onload>
        <onload condition="!Skin.String(SideBladePanelColor) + Skin.String(GeneralPanelsColor.base)">Skin.SetString(SideBladePanelColor,$INFO[Skin.String(GeneralPanelsColor.base)])</onload>
        <onload condition="!Skin.String(SideBladePanelColor.name) + Skin.String(GeneralPanelsColor.base)">Skin.SetString(SideBladePanelColor.name,$INFO[Skin.String(GeneralPanelsColor.name)])</onload>
        <onload condition="!Skin.String(SideBladePanelColor) + !Skin.String(GeneralPanelsColor.base)">Skin.SetString(SideBladePanelColor,ff011222)</onload>
        <onload condition="!Skin.String(SideBladePanelColor.name) + !Skin.String(GeneralPanelsColor.base)">Skin.SetString(SideBladePanelColor.name,darkblue)</onload>

        <onload condition="!Skin.String(SideBladeTextColor)">Skin.SetString(SideBladeTextColor,$INFO[Skin.String(GeneralTextColor)])</onload>
        <onload condition="!Skin.String(SideBladeTextColor.name)">Skin.SetString(SideBladeTextColor.name,$INFO[Skin.String(GeneralTextColor.name)])</onload>
        <onload condition="!Skin.String(TagOverlaysPanelColor)">Skin.SetString(TagOverlaysPanelColor,dd000000)</onload>
        <onload condition="!Skin.String(TagOverlaysPanelColor.name)">Skin.SetString(TagOverlaysPanelColor.name,black)</onload>
        <onload condition="!Skin.String(TagOverlaysTextColor)">Skin.SetString(TagOverlaysTextColor,ffffffff)</onload>
        <onload condition="!Skin.String(TagOverlaysTextColor.name)">Skin.SetString(TagOverlaysTextColor.name,white)</onload>
        
        <onload condition="!Skin.String(LyricsOverlayColor)">Skin.SetString(LyricsOverlayColor,cc000000)</onload>
        <onload condition="!Skin.String(LyricsOverlayColor.name)">Skin.SetString(LyricsOverlayColor.name,black)</onload>
        <onload condition="!Skin.String(LyricsTextColor)">Skin.SetString(LyricsTextColor,aaffffff)</onload>
        <onload condition="!Skin.String(LyricsTextColor.name)">Skin.SetString(LyricsTextColor.name,white)</onload>
        <onload condition="!Skin.String(LyricsTextShadowColor)">Skin.SetString(LyricsTextShadowColor,none)</onload>
        <onload condition="!Skin.String(LyricsTextShadowColor.name)">Skin.SetString(LyricsTextShadowColor.name,None)</onload>
        <onload condition="!Skin.String(LyricsFocusTextColor)">Skin.SetString(LyricsFocusTextColor,ffffffff)</onload>
        <onload condition="!Skin.String(LyricsFocusTextColor.name)">Skin.SetString(LyricsFocusTextColor.name,white)</onload>
        <onload condition="!Skin.String(LyricsFocusTextShadowColor)">Skin.SetString(LyricsFocusTextShadowColor,none)</onload>
        <onload condition="!Skin.String(LyricsFocusTextShadowColor.name)">Skin.SetString(LyricsFocusTextShadowColor.name,None)</onload>
        
        <onload condition="!Skin.String(MainMenuPanelColor) + !Skin.String(MainMenuPanelColor.name) + !Skin.HasSetting(HideWidgetDetailsPanel)">Skin.SetString(MainMenuPanelColor.name,$INFO[Skin.String(ViewDetailsPanelColor.name)])</onload>
        <onload condition="!Skin.String(MainMenuPanelColor) + !Skin.HasSetting(HideWidgetDetailsPanel)">Skin.SetString(MainMenuPanelColor,$INFO[Skin.String(ViewDetailsPanelColor)])</onload>
        <onload condition="!Skin.String(MainMenuPanelColor) + !Skin.String(MainMenuPanelColor.name) + Skin.HasSetting(HideWidgetDetailsPanel)">Skin.SetString(MainMenuPanelColor.name,None)</onload>
        <onload condition="!Skin.String(MainMenuPanelColor) + Skin.HasSetting(HideWidgetDetailsPanel)">Skin.SetString(MainMenuPanelColor,none)</onload>
        
        <onload condition="!Skin.String(MainMenuTextColor) + !Skin.String(MainMenuTextColor.name)">Skin.SetString(MainMenuTextColor.name,$INFO[Skin.String(ViewDetailsTextColor.name)])</onload>
        <onload condition="!Skin.String(MainMenuTextColor)">Skin.SetString(MainMenuTextColor,$INFO[Skin.String(ViewDetailsTextColor)])</onload>
        
        <onload condition="!Skin.String(MainMenuFocusTextColor) + !Skin.String(MainMenuFocusTextColor.name)">Skin.SetString(MainMenuFocusTextColor.name,ff006bb3)</onload>
        <onload condition="!Skin.String(MainMenuFocusTextColor)">Skin.SetString(MainMenuFocusTextColor,ff006bb3)</onload>

        <onload condition="!Skin.String(HeaderPanelColor) + !Skin.String(HeaderPanelColor.name)">Skin.SetString(HeaderPanelColor.name,None)</onload>
        <onload condition="!Skin.String(HeaderPanelColor)">Skin.SetString(HeaderPanelColor,None)</onload>

        <onload condition="!Skin.String(ActiveSpinControlColor) + !Skin.String(ActiveSpinControlColor.name)">Skin.SetString(ActiveSpinControlColor.name,neon green)</onload>
        <onload condition="!Skin.String(ActiveSpinControlColor)">Skin.SetString(ActiveSpinControlColor,ff39ff14)</onload>
        
        <onload condition="!Skin.String(PVRGuideItemColorUnfocus)">Skin.SetString(PVRGuideItemColorUnfocus,$INFO[Skin.String(ButtonColor)])</onload>
        <onload condition="!Skin.String(PVRGuideItemColorUnfocus.name)">Skin.SetString(PVRGuideItemColorUnfocus.name,$INFO[Skin.String(ButtonColor.name)])</onload>
        <onload condition="!Skin.String(PVRGuideItemColorFocus)">Skin.SetString(PVRGuideItemColorFocus,$INFO[Skin.String(ButtonFocusColor)])</onload>
        <onload condition="!Skin.String(PVRGuideItemColorFocus.name)">Skin.SetString(PVRGuideItemColorFocus.name,$INFO[Skin.String(ButtonFocusColor.name)])</onload>
        <onload condition="!Skin.String(PVRGuideItemTextColorUnfocus)">Skin.SetString(PVRGuideItemTextColorUnfocus,$INFO[Skin.String(ButtonTextColor)])</onload>
        <onload condition="!Skin.String(PVRGuideItemTextColorUnfocus.name)">Skin.SetString(PVRGuideItemTextColorUnfocus.name,$INFO[Skin.String(ButtonTextColor.name)])</onload>
        <onload condition="!Skin.String(PVRGuideItemTextColorFocus)">Skin.SetString(PVRGuideItemTextColorFocus,$INFO[Skin.String(ButtonFocusTextColor)])</onload>
        <onload condition="!Skin.String(PVRGuideItemTextColorFocus.name)">Skin.SetString(PVRGuideItemTextColorFocus.name,$INFO[Skin.String(ButtonFocusTextColor.name)])</onload>

        <onload condition="!Skin.String(EDLMarkerColor)">Skin.SetString(EDLMarkerColor,ffff0000)</onload>
        <onload condition="!Skin.String(EDLMarkerColor.name)">Skin.SetString(EDLMarkerColor.name,red)</onload>
		<onload condition="!Skin.String(ChapterMarkerColor)">Skin.SetString(ChapterMarkerColor,ffffffff)</onload>
        <onload condition="!Skin.String(ChapterMarkerColor.name)">Skin.SetString(ChapterMarkerColor.name,white)</onload>
		<onload condition="!Skin.String(SceneMarkerColor)">Skin.SetString(SceneMarkerColor,ffffffff)</onload>
        <onload condition="!Skin.String(SceneMarkerColor.name)">Skin.SetString(SceneMarkerColor.name,white)</onload>
        <onload condition="!Skin.String(CutMarkerColor)">Skin.SetString(CutMarkerColor,ffffffff)</onload>
        <onload condition="!Skin.String(CutMarkerColor.name)">Skin.SetString(CutMarkerColor.name,white)</onload>
        
        <onload condition="!Skin.String(defaultcolorpalette.label)">Skin.SetString(defaultcolorpalette.label,basic)</onload>
        <onload condition="!Skin.String(defaultcolorpalette)">Skin.SetString(defaultcolorpalette,basic)</onload>

        <onload condition="!Skin.String(volumestyle.label)">Skin.SetString(volumestyle.label,modern)</onload>
        <onload condition="!Skin.String(volumestyle)">Skin.SetString(volumestyle,modern)</onload>
        <!-- <onload condition="!Skin.String(volumestyle.label,basic)">Skin.SetString(volumestyle.label,basic)</onload> -->
        <!-- <onload condition="!Skin.String(volumestyle,basic)">Skin.SetString(volumestyle,basic)</onload> -->
        <onload>Skin.SetString(CompareTxtDisable, disable)</onload>
        <onload>Skin.SetString(CompareTxtTop, top)</onload>
        <onload>Skin.SetString(CompareTxtBottom, bottom)</onload>
        <onload>Skin.SetString(CompareTxtLarge, large)</onload>
        <onload>Skin.SetString(CompareTxtDefault, default)</onload>
        
  		<!-- finish default settings -->
        <onload condition="!Skin.HasSetting(HomeMenuDefaults46)">Skin.SetBool(HomeMenuDefaults46)</onload>
    </include>
	
</includes>